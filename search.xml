<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端那些事</title>
      <link href="/personal-blog-wzz/2022/12/03/%E9%9D%A2%E8%AF%95%E5%BF%83%E5%BE%97/"/>
      <url>/personal-blog-wzz/2022/12/03/%E9%9D%A2%E8%AF%95%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="周总结："><a href="#周总结：" class="headerlink" title="周总结："></a>周总结：</h1><p>​这个星期，莫名其妙的忙，先是回家的一系列收拾工作，到回家后被安排新的项目，并担当项目组长，在加上每天还有小组招新的事情，专业课考试的压力，就莫名其妙忙了起来；</p><p>​这个星期也没学多少实质性的知识，个人觉得对面试这一块感触挺大的，毕竟站在面试官的角度面试不少学弟，学妹了。</p><h1 id="面试心得："><a href="#面试心得：" class="headerlink" title="面试心得："></a>面试心得：</h1><p>个人觉得一个比较完美的面试需要做好以下几点：</p><h2 id="1-态度"><a href="#1-态度" class="headerlink" title="1.态度"></a>1.态度</h2><p>自己对面试的态度无非是最重要的，人们对一件事的态度往往很大程度上决定了你在这件事上的言行举止。言行举止的暴露，无非直接影响了面试官对你个人的印象，也会直接影响着对我们评估；</p><h2 id="2-简历"><a href="#2-简历" class="headerlink" title="2.简历"></a>2.简历</h2><p>简历无非是决定我们第一印象的关键，在简历这一块我觉得应该做到这些：</p><h3 id="（1）字迹公正，板书规整"><a href="#（1）字迹公正，板书规整" class="headerlink" title="（1）字迹公正，板书规整"></a>（1）字迹公正，板书规整</h3><p>字迹公正，板书规整表现出我们写简历的态度，给人一种焕然一新的感觉。</p><h3 id="（2）字别写太少"><a href="#（2）字别写太少" class="headerlink" title="（2）字别写太少"></a>（2）字别写太少</h3><p>简历写少会给人一种没特色，没态度的感觉。</p><h3 id="（3）语言不拖沓"><a href="#（3）语言不拖沓" class="headerlink" title="（3）语言不拖沓"></a>（3）语言不拖沓</h3><p>语言信息，目的表达明确，能让面试官更明确的了解你的个体情况，不厌烦。</p><h3 id="（4）突出特点"><a href="#（4）突出特点" class="headerlink" title="（4）突出特点"></a>（4）突出特点</h3><p>很多人写的简历都差不多的，没什么亮点，可以着重介绍一下自己的优势，或有意义的经历。也要着重讲一下自己对公司的了解和作用。</p><h2 id="3-了解"><a href="#3-了解" class="headerlink" title="3.了解"></a>3.了解</h2><p>面试官面试我们，最重要的就是了解我们是否能带给自己公司利益。除了一些面试工作所需要的技能以外，他们会着重于问一些我们对公司的了解情况，来匹配他们对利益的判断。</p><h2 id="4-答辩"><a href="#4-答辩" class="headerlink" title="4.答辩"></a>4.答辩</h2><p>自己面对面试官的问题，要注重表达自己的态度，能给公司带来什么样的利益。语言不能太拖沓，会显得自己沟通能力一般。</p><h2 id="5-心态"><a href="#5-心态" class="headerlink" title="5.心态"></a>5.心态</h2><p>自己的心态也很大程度上影响着我们的表现。心态平和一些，我们也可以抱着一个学习的态度，来对待这次面试。</p><h2 id="6-训练"><a href="#6-训练" class="headerlink" title="6.训练"></a>6.训练</h2><p>我们面试多了，自然会对面试的场景，流程熟悉很多。这样，我们自然而然的就能表现的更好。</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用hexo中的matery主题搭建个人博客（完整版）</title>
      <link href="/personal-blog-wzz/2022/11/25/%E7%94%A8hexo%E4%B8%AD%E7%9A%84matery%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%AE%8C%E6%95%B4%E7%89%88%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/11/25/%E7%94%A8hexo%E4%B8%AD%E7%9A%84matery%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%AE%8C%E6%95%B4%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1-初始化搭建："><a href="#1-初始化搭建：" class="headerlink" title="1.初始化搭建："></a>1.初始化搭建：</h1><p><a href="https://blog.csdn.net/m0_46210779/article/details/123261065?spm=1001.2014.3001.5506" title="使用 gitee | github + hexo 快速搭建 hexo-theme-matery 闪烁之狐主题の个人博客_扶摇而上者九万里的博客-CSDN博客">使用 gitee | github + hexo 快速搭建 hexo-theme-matery 闪烁之狐主题の个人博客_扶摇而上者九万里的博客-CSDN博客</a></p><blockquote><p>注意：gitee搭建需要实名认证，github不需要但访问较慢</p></blockquote><h1 id="2-优化主题个性化："><a href="#2-优化主题个性化：" class="headerlink" title="2.优化主题个性化："></a>2.优化主题个性化：</h1><p><a href="https://blog.csdn.net/kuashijidexibao/article/details/112971657?spm=1001.2014.3001.5506" title="Hexo-Matery主题细致美化_marma1ade的博客-CSDN博客">Hexo-Matery主题细致美化_marma1ade的博客-CSDN博客</a></p><blockquote><p>注意：美化主题的博客很多，可自行搜索</p></blockquote><h1 id="3-将CSND的文章转出md格式部署个人博客上："><a href="#3-将CSND的文章转出md格式部署个人博客上：" class="headerlink" title="3.将CSND的文章转出md格式部署个人博客上："></a>3.将CSND的文章转出md格式部署个人博客上：</h1><p><a href="https://sliing.blog.csdn.net/article/details/122628848?spm=1001.2014.3001.5506" title="CSDN博客迁移到HEXO_fFee-ops的博客-CSDN博客">CSDN博客迁移到HEXO_fFee-ops的博客-CSDN博客</a></p><h1 id="4-效果展示："><a href="#4-效果展示：" class="headerlink" title="4.效果展示："></a>4.效果展示：</h1><p>github：<a href="https://wzz778.github.io/github_personal_blog/" title="阿泽的个人博客">阿泽的个人博客</a></p><p>gitee：<a href="http://zezhengyyds.gitee.io/Personal-blog-wzz%EF%BC%88%E5%AE%A1%E6%A0%B8%E4%B8%AD%EF%BC%89">http://zezhengyyds.gitee.io/Personal-blog-wzz（审核中）</a></p><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用node建立websocket通信实现聊天室</title>
      <link href="/personal-blog-wzz/2022/11/19/%E7%94%A8node%E5%BB%BA%E7%AB%8Bwebsocket%E9%80%9A%E4%BF%A1%E5%AE%9E%E7%8E%B0%E8%81%8A%E5%A4%A9%E5%AE%A4/"/>
      <url>/personal-blog-wzz/2022/11/19/%E7%94%A8node%E5%BB%BA%E7%AB%8Bwebsocket%E9%80%9A%E4%BF%A1%E5%AE%9E%E7%8E%B0%E8%81%8A%E5%A4%A9%E5%AE%A4/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1-简单的房间号聊天室"><a href="#1-简单的房间号聊天室" class="headerlink" title="1.简单的房间号聊天室"></a>1.简单的房间号聊天室</h1><p><strong>该聊天室为最基本的聊天室：</strong></p><h3 id="（1）浏览器端"><a href="#（1）浏览器端" class="headerlink" title="（1）浏览器端"></a>（1）浏览器端</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>day1.css<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.7.8/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!isshow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>            房间：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roomid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>进入聊天室<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sendmessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发送信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>closews<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>关闭ws<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>在线人数:&#123;&#123;num&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item,index) in list<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    &#123;&#123;item&#125;&#125;                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;script src="day1.js"> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">var</span> app<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>                    <span class="token literal-property property">isshow</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>                    <span class="token literal-property property">list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token literal-property property">ws</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token literal-property property">roomid</span><span class="token operator">:</span><span class="token string">''</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">'ws://127.0.0.1:3000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onopen<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onOpen<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onMessage<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onclose<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClose<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onerror<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onError<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">sendmessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"我："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                        <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"message"</span><span class="token punctuation">,</span>                        <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token operator">=</span><span class="token string">''</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"打开ws："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//用户未登录接收不到消息</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isshow<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">var</span> thismsg<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">=</span>thismsg<span class="token punctuation">.</span>personnumber                    <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">==</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">return</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'enter'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"进入聊天室"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'out'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"退出聊天室"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"  :"</span><span class="token operator">+</span>thismsg<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                     <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"关闭ws:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">onError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"出错:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">closews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">""</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span>roomid<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"空"</span><span class="token punctuation">)</span>                        <span class="token keyword">return</span>                     <span class="token punctuation">&#125;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isshow<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                        <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"enter"</span><span class="token punctuation">,</span>                        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>                        <span class="token literal-property property">roomid</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>roomid                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="（2）服务器端"><a href="#（2）服务器端" class="headerlink" title="（2）服务器端"></a>（2）服务器端</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> WebSocket<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ws'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> wss<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket<span class="token punctuation">.</span>Server</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">port</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> group<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>wss<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'connection'</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token function">connection</span><span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"---------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> msgobj<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'enter'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      ws<span class="token punctuation">.</span>name<span class="token operator">=</span>msgobj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>      ws<span class="token punctuation">.</span>roomid<span class="token operator">=</span>msgobj<span class="token punctuation">.</span>roomid<span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">===</span><span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    wss<span class="token punctuation">.</span>clients<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">//判断非自己的客户端</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>readyState <span class="token operator">===</span> WebSocket<span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token operator">&amp;&amp;</span>client<span class="token punctuation">.</span>roomid<span class="token operator">==</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        msgobj<span class="token punctuation">.</span>name<span class="token operator">=</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">;</span>        msgobj<span class="token punctuation">.</span>personnumber<span class="token operator">=</span>group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token punctuation">;</span>        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    msgobj<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    wss<span class="token punctuation">.</span>clients<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">//判断非自己的客户端</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>readyState <span class="token operator">===</span> WebSocket<span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token operator">&amp;&amp;</span>client<span class="token punctuation">.</span>roomid<span class="token operator">==</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        msgobj<span class="token punctuation">.</span>name<span class="token operator">=</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">;</span>        msgobj<span class="token punctuation">.</span>personnumber<span class="token operator">=</span>group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token punctuation">;</span>        msgobj<span class="token punctuation">.</span>event<span class="token operator">=</span><span class="token string">"out"</span><span class="token punctuation">;</span>        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h1 id="2-添加鉴权"><a href="#2-添加鉴权" class="headerlink" title="2.添加鉴权:"></a>2.添加鉴权:</h1><h3 id="（1）浏览器端-1"><a href="#（1）浏览器端-1" class="headerlink" title="（1）浏览器端"></a>（1）浏览器端</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> app<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">isshow</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token literal-property property">list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token literal-property property">ws</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">roomid</span><span class="token operator">:</span><span class="token string">''</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">'ws://127.0.0.1:3000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onopen<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onOpen<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onMessage<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onclose<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClose<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onerror<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onError<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token function">sendmessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"我："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"message"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token operator">=</span><span class="token string">''</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"打开ws："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"auth"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">message</span><span class="token operator">:</span><span class="token string">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ind6eiIsImlhdCI6MTUxNjIzOTAyMn0.0WWry526SJ5FQ-9B7L_Y9dDBm16uh3o2LFR6ee8f_ew"</span><span class="token comment">//token数据</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//用户未登录接收不到消息</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isshow<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">var</span> thismsg<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'onauth'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请鉴权"</span><span class="token punctuation">)</span>                 <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">=</span>thismsg<span class="token punctuation">.</span>personnumber                <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">==</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'enter'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"进入聊天室"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'out'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"退出聊天室"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"  :"</span><span class="token operator">+</span>thismsg<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                 <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"关闭ws:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"出错:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">closews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">""</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span>roomid<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"空"</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span>                 <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isshow<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"enter"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>                    <span class="token literal-property property">roomid</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>roomid                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="（2）服务器端-1"><a href="#（2）服务器端-1" class="headerlink" title="（2）服务器端"></a>（2）服务器端</h3><p>安装jsonwebtoken：</p><blockquote><p><code>npm i jsonwebtoken</code></p></blockquote><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> WebSocket<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ws'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> wss<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket<span class="token punctuation">.</span>Server</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">noServer</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> jwt<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jsonwebtoken'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> log <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'console'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> group<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>wss<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'connection'</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token function">connection</span><span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"---------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> msgobj<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'enter'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            ws<span class="token punctuation">.</span>name<span class="token operator">=</span>msgobj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>roomid<span class="token operator">=</span>msgobj<span class="token punctuation">.</span>roomid<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">===</span><span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//鉴权：</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>event<span class="token operator">===</span><span class="token string">"auth"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>message<span class="token punctuation">,</span><span class="token string">"wzz"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>decode</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"auth error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">;</span>                    ws<span class="token punctuation">.</span>isAuth<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ws<span class="token punctuation">.</span>isAuth<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"onauth"</span><span class="token punctuation">,</span>                <span class="token literal-property property">message</span><span class="token operator">:</span><span class="token string">"please auth again"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        wss<span class="token punctuation">.</span>clients<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">//判断非自己的客户端</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>readyState <span class="token operator">===</span> WebSocket<span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token operator">&amp;&amp;</span>client<span class="token punctuation">.</span>roomid<span class="token operator">==</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                msgobj<span class="token punctuation">.</span>name<span class="token operator">=</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                msgobj<span class="token punctuation">.</span>personnumber<span class="token operator">=</span>group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token punctuation">;</span>                client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        msgobj<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        wss<span class="token punctuation">.</span>clients<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">//判断非自己的客户端</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>readyState <span class="token operator">===</span> WebSocket<span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token operator">&amp;&amp;</span>client<span class="token punctuation">.</span>roomid<span class="token operator">==</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                msgobj<span class="token punctuation">.</span>name<span class="token operator">=</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                msgobj<span class="token punctuation">.</span>personnumber<span class="token operator">=</span>group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token punctuation">;</span>                msgobj<span class="token punctuation">.</span>event<span class="token operator">=</span><span class="token string">"out"</span><span class="token punctuation">;</span>                client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'upgrade'</span> <span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">upgrade</span><span class="token punctuation">(</span> <span class="token parameter">request<span class="token punctuation">,</span>socket<span class="token punctuation">,</span>head</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"request :  "</span><span class="token operator">+</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// authenticate(request, (err, client) => &#123;</span>    <span class="token comment">//     if (err||!client) &#123;</span>    <span class="token comment">//         socket.destroy();</span>    <span class="token comment">//         return;</span>    <span class="token comment">//     &#125;</span>        wss<span class="token punctuation">.</span><span class="token function">handleUpgrade</span><span class="token punctuation">(</span> request<span class="token punctuation">,</span> socket<span class="token punctuation">,</span> head<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token function">done</span><span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            wss<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'connection'</span><span class="token punctuation">,</span>ws<span class="token punctuation">,</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// &#125;)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span></code></pre><h3 id="（3）node端"><a href="#（3）node端" class="headerlink" title="（3）node端"></a>（3）node端</h3><p>可直接传递token：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> WebSocket<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ws'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> ws<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">'ws://127.0.0.1:3000'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">token</span><span class="token operator">:</span><span class="token string">'213'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="3-心跳检查断线重连"><a href="#3-心跳检查断线重连" class="headerlink" title="3.心跳检查断线重连"></a>3.心跳检查断线重连</h1><h3 id="（1）浏览器端-2"><a href="#（1）浏览器端-2" class="headerlink" title="（1）浏览器端"></a>（1）浏览器端</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> app<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">isshow</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token literal-property property">list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token literal-property property">ws</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">roomid</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">handle</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>               <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// mounted() &#123;</span>        <span class="token comment">//     this.ws=new WebSocket('ws://127.0.0.1:3000');</span>        <span class="token comment">//     this.ws.onopen=this.onOpen;</span>        <span class="token comment">//     this.ws.onmsg=this.onmsg;</span>        <span class="token comment">//     this.ws.onclose=this.onClose;</span>        <span class="token comment">//     this.ws.onerror=this.onError;</span>        <span class="token comment">// &#125;,</span>        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">'ws://127.0.0.1:3000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onopen<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onOpen<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span> onMessage<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onclose<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClose<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onerror<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>onError<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">sendmsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"我："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"msg"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token operator">=</span><span class="token string">''</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"打开ws："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"auth"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.33NBeLKafs6unecYcSJl7QUlfv3DfYvdf2TXSEPNYiY"</span><span class="token comment">//token数据</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"enter"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>                    <span class="token literal-property property">roomid</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>roomid                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//用户未登录接收不到消息</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isshow<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">var</span> thismsg<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">switch</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>event<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">case</span> <span class="token string">'onauth'</span><span class="token operator">:</span>                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请鉴权"</span><span class="token punctuation">)</span>                         <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">'enter'</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"进入聊天室"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">'out'</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"退出聊天室"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">'heartbeat'</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"heartbeat"</span><span class="token punctuation">,</span>                            <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">"pong"</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">default</span><span class="token operator">:</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">!==</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>thismsg<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"  :"</span><span class="token operator">+</span>thismsg<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                  <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">=</span>thismsg<span class="token punctuation">.</span>pnum            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"关闭ws:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">onError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"出错:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//连接失败后一秒进行断线重连</span>                <span class="token keyword">var</span> that<span class="token operator">=</span><span class="token keyword">this</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    that<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">closews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">""</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span>roomid<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"空"</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span>                 <span class="token punctuation">&#125;</span>                 <span class="token keyword">this</span><span class="token punctuation">.</span>isshow<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">checkServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                  <span class="token keyword">var</span> that<span class="token operator">=</span><span class="token keyword">this</span>                <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handle<span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>handle<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    that<span class="token punctuation">.</span><span class="token function">onClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    that<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token operator">+</span><span class="token number">500</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="（2）服务器端-2"><a href="#（2）服务器端-2" class="headerlink" title="（2）服务器端"></a>（2）服务器端</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> WebSocket<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ws'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> wss<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket<span class="token punctuation">.</span>Server</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">noServer</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> jwt<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jsonwebtoken'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> timeInterval<span class="token operator">=</span><span class="token number">1000</span><span class="token keyword">let</span> group<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>wss<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'connection'</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token function">connection</span><span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ws<span class="token punctuation">.</span>isAlive<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>    ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> msgobj<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'enter'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            ws<span class="token punctuation">.</span>name<span class="token operator">=</span>msgobj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>roomid<span class="token operator">=</span>msgobj<span class="token punctuation">.</span>roomid<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">===</span><span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//鉴权：</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>event<span class="token operator">===</span><span class="token string">"auth"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token string">"wzz"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>decode</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"auth error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                        <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">"onauth"</span><span class="token punctuation">,</span>                        <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">"please auth again"</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">;</span>                    ws<span class="token punctuation">.</span>isAuth<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ws<span class="token punctuation">.</span>isAuth<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>         <span class="token punctuation">&#125;</span>        <span class="token comment">//心跳监测：</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">.</span>event<span class="token operator">==</span><span class="token string">'heartbeat'</span><span class="token operator">&amp;&amp;</span>msgobj<span class="token punctuation">.</span>msg<span class="token operator">==</span><span class="token string">"pong"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            ws<span class="token punctuation">.</span>isAlive<span class="token operator">=</span><span class="token boolean">true</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token comment">// return</span>        <span class="token punctuation">&#125;</span>        wss<span class="token punctuation">.</span>clients<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">//判断非自己的客户端</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>readyState <span class="token operator">===</span> WebSocket<span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token operator">&amp;&amp;</span>client<span class="token punctuation">.</span>roomid<span class="token operator">==</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                msgobj<span class="token punctuation">.</span>name<span class="token operator">=</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                msgobj<span class="token punctuation">.</span>pnum<span class="token operator">=</span>group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token punctuation">;</span>                client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        msgobj<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        wss<span class="token punctuation">.</span>clients<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">//判断非自己的客户端</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>readyState <span class="token operator">===</span> WebSocket<span class="token punctuation">.</span><span class="token constant">OPEN</span><span class="token operator">&amp;&amp;</span>client<span class="token punctuation">.</span>roomid<span class="token operator">==</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                msgobj<span class="token punctuation">.</span>name<span class="token operator">=</span>ws<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                msgobj<span class="token punctuation">.</span>pnum<span class="token operator">=</span>group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token punctuation">;</span>                msgobj<span class="token punctuation">.</span>event<span class="token operator">=</span><span class="token string">"out"</span><span class="token punctuation">;</span>                client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msgobj<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'upgrade'</span> <span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">upgrade</span><span class="token punctuation">(</span> <span class="token parameter">request<span class="token punctuation">,</span>socket<span class="token punctuation">,</span>head</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    wss<span class="token punctuation">.</span><span class="token function">handleUpgrade</span><span class="token punctuation">(</span> request<span class="token punctuation">,</span> socket<span class="token punctuation">,</span> head<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token function">done</span><span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        wss<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'connection'</span><span class="token punctuation">,</span>ws<span class="token punctuation">,</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    wss<span class="token punctuation">.</span>clients<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ws<span class="token punctuation">.</span>isAlive<span class="token operator">&amp;&amp;</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token keyword">delete</span> ws<span class="token punctuation">[</span><span class="token string">'roomid'</span><span class="token punctuation">]</span>            <span class="token keyword">return</span>  ws<span class="token punctuation">.</span><span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        ws<span class="token punctuation">.</span>isAlive<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>        ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">event</span><span class="token operator">:</span><span class="token string">'heartbeat'</span><span class="token punctuation">,</span>            <span class="token literal-property property">pnum</span><span class="token operator">:</span>group<span class="token punctuation">[</span>ws<span class="token punctuation">.</span>roomid<span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">'ping'</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>timeInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 项目实战 javascript 前端 websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuex笔记</title>
      <link href="/personal-blog-wzz/2022/11/14/Vuex/"/>
      <url>/personal-blog-wzz/2022/11/14/Vuex/</url>
      
        <content type="html"><![CDATA[<h1 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h1><p> 在Vue中实现集中式状态（数据）管理的一个Vue插件，对vue应用中多个组件的共享状态进行集中式的管理（读&#x2F;写），也是一种组件间通信的方式，且适用于任意组件间通信。</p><h1 id="2-何时使用？"><a href="#2-何时使用？" class="headerlink" title="2.何时使用？"></a>2.何时使用？</h1><p> 多个组件需要共享数据时</p><h1 id="3-vuex的工作原理："><a href="#3-vuex的工作原理：" class="headerlink" title="3.vuex的工作原理："></a>3.vuex的工作原理：</h1><h3 id="官方流程图："><a href="#官方流程图：" class="headerlink" title="官方流程图："></a>官方流程图：</h3><p><img src="/personal-blog-wzz/images/1667217262551-8e0e6a15-9a2a-4fcb-bfeb-7ef58ff03622.png" alt="image.png"><br>**<em>state：</em>**主要是store的储存位置，用于数据的存储；<br><strong>Vue Components：</strong>是在index文件中配置的vuex生成的vc属性，方便连接使用store<br>**<em>Action：dispatch</em>**方法的调用，主要是对参数精选判断，判断要传的具体参数后给下一步进行处理（api调用）；<br>**<em>Mutations：commit</em>**方法的调用，对传来的数据进行最终的处理，修改state里的数据，方便最终的展示；</p><h1 id="4-搭建vuex环境"><a href="#4-搭建vuex环境" class="headerlink" title="4.搭建vuex环境"></a>4.搭建vuex环境</h1><p>先下载npm：<code>npm i vuex@3</code><br><strong><em>注意：在vue2中要vuex3，在vue3中要vuex4。</em></strong><br><strong><em>注意：在main.js中引入：</em></strong><br><code>import vuex from &#39;vuex&#39;;</code><br><code>Vue.use(vuex)</code></p><ol><li><p>创建文件：<code>src/store/index.js</code></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//引入Vue核心库</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token comment">//应用Vuex插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token comment">//准备actions对象——响应组件中用户的动作</span><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">//准备mutations对象——修改state中的数据</span><span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">//准备state对象——保存具体的数据</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    actions<span class="token punctuation">,</span>    mutations<span class="token punctuation">,</span>    state<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></li><li><p>在<code>main.js</code>中创建vm时传入<code>store</code>配置项</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//引入store</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//创建vm</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>    store<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></li></ol><h1 id="5-基本使用"><a href="#5-基本使用" class="headerlink" title="5.基本使用"></a>5.基本使用</h1><ul><li>初始化数据、配置<code>actions</code>、配置<code>mutations</code>，操作文件<code>store.js</code></li></ul><h3 id="（1）组件使用："><a href="#（1）组件使用：" class="headerlink" title="（1）组件使用："></a>（1）组件使用：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript">模板引入数据：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>方法：<span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIAN'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">incrementOdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">incrementWait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'jiaWait'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><h3 id="（2）index核心配置："><a href="#（2）index核心配置：" class="headerlink" title="（2）index核心配置："></a>（2）index核心配置：</h3><p><em><strong>actions和mutations中的两个传参，第一个是上下文，方便去取上面的数据或者进行下一步操作</strong></em></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//引入Vue核心库</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token comment">//引用Vuex</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//响应组件中加的动作</span>    <span class="token function">jia</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// console.log('actions中的jia被调用了',miniStore,value)</span>        context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//执行加</span>    <span class="token constant">JIA</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// console.log('mutations中的JIA被调用了',state,value)</span>        state<span class="token punctuation">.</span>sum <span class="token operator">+=</span> value    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//初始化数据</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    actions<span class="token punctuation">,</span>    mutations<span class="token punctuation">,</span>    state<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><ul><li>组件中读取vuex中的数据：<code>$store.state.sum</code> </li><li>组件中修改vuex中的数据：<code>$store.dispatch(&#39;action中的方法名&#39;,数据)</code> 或 <code>$store.commit(&#39;mutations中的方法名&#39;,数据)</code> <blockquote><p>备注：若没有网络请求或其他业务逻辑，组件中也可以越过actions，即不写<code>dispatch</code>，直接编写<code>commit</code></p></blockquote></li></ul><h3 id="（3）store的getters配置："><a href="#（3）store的getters配置：" class="headerlink" title="（3）store的getters配置："></a>（3）store的getters配置：</h3><ol><li><p>概念：当state中的数据需要经过加工后再使用时，可以使用getters加工。 </p></li><li><p>在<code>store.js</code>中追加<code>getters</code>配置 </p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> state<span class="token punctuation">.</span>sum <span class="token operator">*</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token operator">...</span>    getters<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></li><li><p>组件中读取数据：<code>$store.getters.bigSum</code></p></li></ol><h3 id="（4）四个map方法的使用"><a href="#（4）四个map方法的使用" class="headerlink" title="（4）四个map方法的使用"></a>（4）四个map方法的使用</h3><p>帮助引入store的方法到组件里，方便使用；<br><strong><em>注意：使用前都要先引入：</em></strong><br><code>import &#123;mapState,mapGetters,mapMutations,mapActions&#125; from &#39;vuex&#39;</code></p><ol><li><p><strong>mapState方法：</strong>用于帮助我们映射<code>state</code>中的数据为计算属性</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//借助mapState生成计算属性：sum、school、subject（对象写法）</span>     <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">'subject'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//借助mapState生成计算属性：sum、school、subject（数组写法）</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">'subject'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre></li><li><p><strong>mapGetters方法：</strong>用于帮助我们映射<code>getters</code>中的数据为计算属性</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//借助mapGetters生成计算属性：bigSum（对象写法）</span>    <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">bigSum</span><span class="token operator">:</span><span class="token string">'bigSum'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//借助mapGetters生成计算属性：bigSum（数组写法）</span>    <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'bigSum'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre></li><li><p><strong>mapActions方法：</strong>用于帮助我们生成与<code>actions</code>对话的方法，即：包含<code>$store.dispatch(xxx)</code>的函数</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token comment">//靠mapActions生成：incrementOdd、incrementWait（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">incrementOdd</span><span class="token operator">:</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token literal-property property">incrementWait</span><span class="token operator">:</span><span class="token string">'jiaWait'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">//靠mapActions生成：incrementOdd、incrementWait（数组形式）</span>    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token string">'jiaWait'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>**<em>使用时注意传参：</em>**可在模板里面加上括号，如：<br><code>&lt;button @click=&quot;incrementOdd(n)&quot;&gt;当前求和为奇数再加&lt;/button&gt;</code><br>其中的参数n是该模板data中的数据</p></li><li><p><strong>mapMutations方法：</strong>用于帮助我们生成与<code>mutations</code>对话的方法，即：包含<code>$store.commit(xxx)</code>的函数</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token comment">//靠mapActions生成：increment、decrement（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">increment</span><span class="token operator">:</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token literal-property property">decrement</span><span class="token operator">:</span><span class="token string">'JIAN'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//靠mapMutations生成：JIA、JIAN（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token string">'JIAN'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre><blockquote><p>**<em>备注</em>**：mapActions与mapMutations使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。</p></blockquote></li></ol><h1 id="6-Vuex的模块化编码"><a href="#6-Vuex的模块化编码" class="headerlink" title="6.Vuex的模块化编码"></a>6.Vuex的模块化编码</h1><ol><li>目的：让代码更好维护，让多种数据分类更加明确。 </li><li>修改<code>store.js</code></li></ol><p>_<strong>注意：</strong>_使用<code>namespaced:true</code>开启命名空间</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> countAbout <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//开启命名空间</span>  <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> state<span class="token punctuation">.</span>sum <span class="token operator">*</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> personAbout <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//开启命名空间</span>  <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    countAbout<span class="token punctuation">,</span>    personAbout  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><ol start="3"><li><p>开启命名空间后，组件中读取state数据：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//方式一：自己直接读取</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>personAbout<span class="token punctuation">.</span>list<span class="token comment">//方式二：借助mapState读取：</span><span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">'subject'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre></li><li><p>开启命名空间后，组件中读取getters数据：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//方式一：自己直接读取</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">[</span><span class="token string">'personAbout/firstPersonName'</span><span class="token punctuation">]</span><span class="token comment">//方式二：借助mapGetters读取：</span><span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'bigSum'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>开启命名空间后，组件中调用dispatch</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//方式一：自己直接dispatch</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'personAbout/addPersonWang'</span><span class="token punctuation">,</span>person<span class="token punctuation">)</span><span class="token comment">//方式二：借助mapActions：</span><span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">incrementOdd</span><span class="token operator">:</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token literal-property property">incrementWait</span><span class="token operator">:</span><span class="token string">'jiaWait'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></li><li><p>开启命名空间后，组件中调用commit</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//方式一：自己直接commit</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'personAbout/ADD_PERSON'</span><span class="token punctuation">,</span>person<span class="token punctuation">)</span><span class="token comment">//方式二：借助mapMutations：</span><span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">increment</span><span class="token operator">:</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token literal-property property">decrement</span><span class="token operator">:</span><span class="token string">'JIAN'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre><p>可在store中创建多个文件，用es6语句进行暴露，方便维护和整理；</p></li></ol><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><p>配置index</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//该文件用于创建Vuex中最为核心的store</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token keyword">import</span> countOptions <span class="token keyword">from</span> <span class="token string">'./count'</span><span class="token keyword">import</span> personOptions <span class="token keyword">from</span> <span class="token string">'./person'</span><span class="token comment">//应用Vuex插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">modules</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">countAbout</span><span class="token operator">:</span>countOptions<span class="token punctuation">,</span><span class="token literal-property property">personAbout</span><span class="token operator">:</span>personOptions<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>模块引入：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//人员管理相关的配置</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> nanoid <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'nanoid'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">addPersonWang</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'王'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'ADD_PERSON'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'添加的人必须姓王！'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">addPersonServer</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://api.uixsj.cn/hitokoto/get?type=social'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'ADD_PERSON'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token function">nanoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span>response<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token constant">ADD_PERSON</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mutations中的ADD_PERSON被调用了'</span><span class="token punctuation">)</span>state<span class="token punctuation">.</span>personList<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">personList</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'张三'</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">firstPersonName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> state<span class="token punctuation">.</span>personList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//求和相关的配置</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">jiaOdd</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'actions中的jiaOdd被调用了'</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">jiaWait</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'actions中的jiaWait被调用了'</span><span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token constant">JIA</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mutations中的JIA被调用了'</span><span class="token punctuation">)</span>state<span class="token punctuation">.</span>sum <span class="token operator">+=</span> value<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token constant">JIAN</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mutations中的JIAN被调用了'</span><span class="token punctuation">)</span>state<span class="token punctuation">.</span>sum <span class="token operator">-=</span> value<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//当前的和</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">'阳光小学'</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">'前端'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue路由笔记</title>
      <link href="/personal-blog-wzz/2022/11/12/Vue%E8%B7%AF%E7%94%B1%E7%AC%94%E8%AE%B0/"/>
      <url>/personal-blog-wzz/2022/11/12/Vue%E8%B7%AF%E7%94%B1%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1.基本使用"></a>1.基本使用</h1><ol><li>安装vue-router，命令：<code>npm i vue-router</code></li></ol><p><em><strong>注意：新的</strong></em><code>vue-router</code> 4只能在vue3中使用，<code>vue-router3</code>能在vue2中使用</p><p>用vue2可运行： <code>npm i vue-router@3</code></p><ol><li><pre><code>main.js文件应用插件：`Vue.use(VueRouter)` （并引入路由文件）</code></pre></li><li><pre><code>编写router配置项:</code></pre></li></ol><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//引入VueRouter</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token comment">//引入Luyou 组件</span><span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">'../components/About'</span><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'../components/Home'</span><span class="token comment">//创建router实例对象，去管理一组一组的路由规则</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/about'</span><span class="token punctuation">,</span>            <span class="token literal-property property">component</span><span class="token operator">:</span>About        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home'</span><span class="token punctuation">,</span>            <span class="token literal-property property">component</span><span class="token operator">:</span>Home<span class="token punctuation">,</span>          <span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">isAuth</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'详情'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">//传递数据</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//暴露router</span><span class="token keyword">export</span> <span class="token keyword">default</span> router</code></pre><ul><li>实现切换（active-class可配置高亮样式） 点击，实现光亮效果，点击添加“”里的类</li></ul><p>router-link会别vue解析成a，可以当做a标签使用</p><blockquote><p>&lt;router-link active-class&#x3D;”active” to&#x3D;”&#x2F;about”&gt;About&lt;&#x2F;router-link&gt;</p></blockquote><ul><li>指定展示位置 （类似于：slot插槽，将指定的路由放到模板里）</li></ul><blockquote><p> &lt;router-view&gt;&lt;&#x2F;router-view&gt;</p></blockquote><h1 id="2-多级路由（多级路由）"><a href="#2-多级路由（多级路由）" class="headerlink" title="2.多级路由（多级路由）"></a>2.多级路由（多级路由）</h1><p>1. 配置路由规则，使用children配置项：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/about'</span><span class="token punctuation">,</span>        <span class="token literal-property property">component</span><span class="token operator">:</span>About<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home'</span><span class="token punctuation">,</span>        <span class="token literal-property property">component</span><span class="token operator">:</span>Home<span class="token punctuation">,</span>        <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token comment">//通过children配置子级路由</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'news'</span><span class="token punctuation">,</span> <span class="token comment">//此处一定不要写：/news</span>                <span class="token literal-property property">component</span><span class="token operator">:</span>News            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'message'</span><span class="token punctuation">,</span><span class="token comment">//此处一定不要写：/message</span>                <span class="token literal-property property">component</span><span class="token operator">:</span>Message            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span></code></pre><p> 2. 跳转（要写完整路径）：</p><blockquote><p>&lt;router-link to&#x3D;”&#x2F;home&#x2F;news”&gt;News&lt;&#x2F;router-link&gt;</p></blockquote><h1 id="3-路由接收query参数"><a href="#3-路由接收query参数" class="headerlink" title="3.路由接收query参数"></a>3.路由接收query参数</h1><h2 id="父级路由传递："><a href="#父级路由传递：" class="headerlink" title="父级路由传递："></a>父级路由传递：</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 跳转并携带query参数，to的字符串写法 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>router<span class="token operator">-</span>link <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">"`/home/message/detail?id=$&#123;m.id&#125;&amp;title=$&#123;m.title&#125;`"</span><span class="token operator">></span>跳转<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 跳转并携带query参数，to的对象写法 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>router<span class="token operator">-</span>link     <span class="token operator">:</span>to<span class="token operator">=</span>"<span class="token punctuation">&#123;</span>        <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home/message/detail'</span><span class="token punctuation">,</span>        <span class="token literal-property property">query</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">666</span><span class="token punctuation">,</span>            <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'你好'</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>"<span class="token operator">></span>跳转<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">></span></code></pre><h2 id="子级路由接收数据："><a href="#子级路由接收数据：" class="headerlink" title="子级路由接收数据："></a>子级路由接收数据：</h2><p>$route可获取到当前路由的信息</p><blockquote><p>$route.query.id<br>$route.query.title</p></blockquote><h1 id="4-路由的params参数"><a href="#4-路由的params参数" class="headerlink" title="4.路由的params参数"></a>4.路由的params参数</h1><p>1. 配置路由，声明接收params参数</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span>    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home'</span><span class="token punctuation">,</span>    <span class="token literal-property property">component</span><span class="token operator">:</span>Home<span class="token punctuation">,</span>    <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'news'</span><span class="token punctuation">,</span>            <span class="token literal-property property">component</span><span class="token operator">:</span>News        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token literal-property property">component</span><span class="token operator">:</span>Message<span class="token punctuation">,</span>            <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'detail/:id/:title'</span><span class="token punctuation">,</span> <span class="token comment">//使用占位符声明接收params参数</span>                    <span class="token literal-property property">component</span><span class="token operator">:</span>Detail<span class="token punctuation">,</span>                    <span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                      <span class="token literal-property property">isshow</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//可通过false配置路由信息</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><p>2. 传递参数</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 跳转并携带params参数，to的字符串写法 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>router<span class="token operator">-</span>link <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">"/home/message/detail/666/你好"</span><span class="token operator">></span>跳转<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 跳转并携带params参数，to的对象写法 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>router<span class="token operator">-</span>link     <span class="token operator">:</span>to<span class="token operator">=</span>"<span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span>        <span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">666</span><span class="token punctuation">,</span>            <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'你好'</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>"<span class="token operator">></span>跳转<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">></span></code></pre><p>3. 接收参数：</p><blockquote><p>$route.params.id<br>$route.params.title</p></blockquote><h1 id="5-编程式路由导航"><a href="#5-编程式路由导航" class="headerlink" title="5.编程式路由导航"></a>5.编程式路由导航</h1><h2 id="（1）replace属性"><a href="#（1）replace属性" class="headerlink" title="（1）replace属性"></a>（1）replace属性</h2><ol><li>作用：控制路由跳转时操作浏览器历史记录的模式</li><li>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>，<code>push</code>是追加历史记录，<code>replace</code>是替换当前记录。路由跳转时候默认为<code>push</code></li><li>如何开启<code>replace</code>模式：<code>&lt;router-link replace .......&gt;News&lt;/router-link&gt;</code></li></ol><h2 id="（2）路由导航api"><a href="#（2）路由导航api" class="headerlink" title="（2）路由导航api"></a>（2）路由导航api</h2><ul><li>作用：不借助<code>&lt;router-link&gt;</code>实现路由跳转，让路由跳转更加灵活</li></ul><p>具体编码：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//$router的两个API</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span>        <span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">id</span><span class="token operator">:</span>xxx<span class="token punctuation">,</span>            <span class="token literal-property property">title</span><span class="token operator">:</span>xxx        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span>        <span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">id</span><span class="token operator">:</span>xxx<span class="token punctuation">,</span>            <span class="token literal-property property">title</span><span class="token operator">:</span>xxx        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//前进</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//后退</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//可前进也可后退 和window.href.go()用法类似</span></code></pre><h1 id="6-缓存路由组件："><a href="#6-缓存路由组件：" class="headerlink" title="6.缓存路由组件："></a>6.缓存路由组件：</h1><ul><li>作用：让不展示的路由组件保持挂载，不被销毁。</li><li>具体编码：</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>keep<span class="token operator">-</span>alive include<span class="token operator">=</span><span class="token string">"News"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>keep<span class="token operator">-</span>alive<span class="token operator">></span></code></pre><h1 id="7-路由守卫"><a href="#7-路由守卫" class="headerlink" title="7.路由守卫"></a>7.路由守卫</h1><p>index中路由的配置：</p><p>通过配置存在meta对象中的isAuth，和title属性分别进行是否做权限判断，和路由标题显示</p><p><em><strong>next()方法决定是否向下执行路由</strong></em></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//创建并暴露一个路由器</span><span class="token keyword">const</span> router <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'guanyu'</span><span class="token punctuation">,</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/about'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>About<span class="token punctuation">,</span><span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">isAuth</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'关于'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'zhuye'</span><span class="token punctuation">,</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Home<span class="token punctuation">,</span><span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'主页'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xinwen'</span><span class="token punctuation">,</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'news'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>News<span class="token punctuation">,</span><span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">isAuth</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'新闻'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">/* beforeEnter: (to, from, next) => &#123;console.log('前置路由守卫',to,from)if(to.meta.isAuth)&#123; //判断是否需要鉴权if(localStorage.getItem('school')==='atguigu')&#123;next()&#125;else&#123;alert('学校名不对，无权限查看！')&#125;&#125;else&#123;next()&#125;&#125; */</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiaoxi'</span><span class="token punctuation">,</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'message'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Message<span class="token punctuation">,</span><span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">isAuth</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'消息'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'detail'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Detail<span class="token punctuation">,</span><span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">isAuth</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'详情'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><ol><li>作用：对路由进行权限控制</li><li>分类：全局守卫、独享守卫、组件内守卫</li><li><h2 id="全局守卫"><a href="#全局守卫" class="headerlink" title="全局守卫:"></a>全局守卫:</h2></li></ol><p> </p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//全局前置守卫：初始化时执行、每次路由切换前执行</span>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeEach'</span><span class="token punctuation">,</span>to<span class="token punctuation">,</span>from<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>isAuth<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//判断当前路由是否需要进行权限控制</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'school'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'atguigu'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//权限控制的具体规则</span>            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//放行</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'暂无权限查看'</span><span class="token punctuation">)</span>            <span class="token comment">// next(&#123;name:'guanyu'&#125;)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//放行</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//全局后置守卫：初始化时执行、每次路由切换后执行</span>router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span><span class="token keyword">from</span></span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'afterEach'</span><span class="token punctuation">,</span>to<span class="token punctuation">,</span>from<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title <span class="token comment">//修改网页的title</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'vue_test'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//全局配置标题</span></code></pre><h2 id="独享守卫"><a href="#独享守卫" class="headerlink" title="独享守卫:"></a>独享守卫:</h2><p>在routes:配置中单独的配置路由守卫</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">beforeEnter</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeEnter'</span><span class="token punctuation">,</span>to<span class="token punctuation">,</span>from<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>isAuth<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//判断当前路由是否需要进行权限控制</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'school'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'atguigu'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'暂无权限查看'</span><span class="token punctuation">)</span>            <span class="token comment">// next(&#123;name:'guanyu'&#125;)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h2 id="组件内守卫："><a href="#组件内守卫：" class="headerlink" title="组件内守卫："></a>组件内守卫：</h2><p>通过路由规则，进，出入该组件时被调用</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//进入守卫：通过路由规则，进入该组件时被调用</span><span class="token function">beforeRouteEnter</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">//离开守卫：通过路由规则，离开该组件时被调用</span><span class="token function">beforeRouteLeave</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></code></pre><h1 id="8-路由器的两种工作模式"><a href="#8-路由器的两种工作模式" class="headerlink" title="8.路由器的两种工作模式"></a>8.路由器的两种工作模式</h1><p>在index配置文件里：</p><p>暴露的router路由，有两种工作模式：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> router <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">'history'</span><span class="token punctuation">,</span><span class="token comment">//或者mode:'hash'</span>  <span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">//配置路径</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><ol><li>对于一个url来说，什么是hash值？—— #及其后面的内容就是hash值。</li><li>hash值不会包含在 HTTP 请求中，即：hash值不会带给服务器。</li><li>hash模式：</li><li>地址中永远带着#号，不美观 。</li><li>若以后将地址通过第三方手机app分享，若app校验严格，则地址会被标记为不合法。</li><li>兼容性较好。</li><li>history模式：</li><li>地址干净，美观 。</li><li>兼容性和hash模式相比略差。</li><li>应用部署上线时需要后端人员支持，解决刷新页面服务端404的问题。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 vue.js javascript 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuex学习笔记</title>
      <link href="/personal-blog-wzz/2022/11/05/Vuex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/personal-blog-wzz/2022/11/05/Vuex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a><strong>目录</strong></h1><p><a href="#uFrlw">1.概念</a></p><p><a href="#W9yE1">2.何时使用？</a></p><p><a href="#R79qq">3.vuex的工作原理：</a></p><p><a href="#OxAuV">官方流程图：</a></p><p><a href="#skuyP">4.搭建vuex环境</a></p><p><a href="#%EF%BC%881%EF%BC%89%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83">（1）配置环境</a></p><p><a href="#%EF%BC%882%EF%BC%89%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%EF%BC%9Asrc/store/index.js">（2）创建文件：src&#x2F;store&#x2F;index.js</a></p><p><a href="#%EF%BC%883%EF%BC%89.%E5%9C%A8main.js%E4%B8%AD%E5%88%9B%E5%BB%BAvm%E6%97%B6%E4%BC%A0%E5%85%A5store%E9%85%8D%E7%BD%AE%E9%A1%B9">（3）.在main.js中创建vm时传入store配置项</a></p><p><a href="#zuEuX">5.基本使用</a></p><p><a href="#mehOD">（1）组件使用：</a></p><p><a href="#Crqkm">（2）index核心配置：</a></p><p><a href="#Rn9AC">（3）store的getters配置：</a></p><p><a href="#NCLYE">（4）四个map方法的使用</a></p><p><a href="#mapState%E6%96%B9%E6%B3%95%EF%BC%9A">mapState方法：</a></p><p><a href="#QxKcH">实例：</a></p><p><a href="#ue28d5c7d">配置index</a></p><p><a href="#ue7753f13">模块引入：</a></p><hr><h1 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h1><p>在Vue中实现集中式状态（数据）管理的一个Vue插件，对vue应用中多个组件的共享状态进行集中式的管理（读&#x2F;写），也是一种组件间通信的方式，且适用于任意组件间通信。</p><h1 id="2-何时使用？"><a href="#2-何时使用？" class="headerlink" title="2.何时使用？"></a>2.何时使用？</h1><p>多个组件需要共享数据时</p><h1 id="3-vuex的工作原理："><a href="#3-vuex的工作原理：" class="headerlink" title="3.vuex的工作原理："></a>3.vuex的工作原理：</h1><h3 id="官方流程图："><a href="#官方流程图：" class="headerlink" title="官方流程图："></a>官方流程图：</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/e7121be7aa561ccbba7c8f2aa211954c.png"></p><p>_<strong>state：</strong>_主要是store的储存位置，用于数据的存储；</p><p><strong>Vue Components：</strong>是在index文件中配置的vuex生成的vc属性，方便连接使用store</p><p>_<strong>Action：dispatch</strong>_方法的调用，主要是对参数精选判断，判断要传的具体参数后给下一步进行处理（api调用）；</p><p>_<strong>Mutations：commit</strong>_方法的调用，对传来的数据进行最终的处理，修改state里的数据，方便最终的展示；</p><h1 id="4-搭建vuex环境"><a href="#4-搭建vuex环境" class="headerlink" title="4.搭建vuex环境"></a>4.搭建vuex环境</h1><h3 id="（1）配置环境"><a href="#（1）配置环境" class="headerlink" title="（1）配置环境"></a>（1）配置环境</h3><blockquote><p>先下载：npm：<code>npm i vuex@3</code></p></blockquote><p><em><strong>注意：在vue2中要vuex3，在vue3中要vuex4。</strong></em></p><p><em><strong>注意：在main.js中引入：</strong></em></p><blockquote><p><code>import vuex from &#39;vuex&#39;;</code></p><p><code>Vue.use(vuex)</code></p></blockquote><h3 id="（2）创建文件：src-store-index-js"><a href="#（2）创建文件：src-store-index-js" class="headerlink" title="（2）创建文件：src/store/index.js"></a>（2）创建文件：<code>src/store/index.js</code></h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//引入Vue核心库</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token comment">//应用Vuex插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token comment">//准备actions对象——响应组件中用户的动作</span><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">//准备mutations对象——修改state中的数据</span><span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">//准备state对象——保存具体的数据</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    actions<span class="token punctuation">,</span>    mutations<span class="token punctuation">,</span>    state<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="（3）-在main-js中创建vm时传入store配置项"><a href="#（3）-在main-js中创建vm时传入store配置项" class="headerlink" title="（3）.在main.js中创建vm时传入store配置项"></a>（3）.在<code>main.js</code>中创建vm时传入<code>store</code>配置项</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//引入store</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//创建vm</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>    store<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h1 id="5-基本使用"><a href="#5-基本使用" class="headerlink" title="5.基本使用"></a>5.基本使用</h1><ul><li>初始化数据、配置<code>actions</code>、配置<code>mutations</code>，操作文件<code>store.js</code></li></ul><h3 id="（1）组件使用："><a href="#（1）组件使用：" class="headerlink" title="（1）组件使用："></a>（1）组件使用：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript">模板引入数据：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>方法：<span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIAN'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">incrementOdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">incrementWait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'jiaWait'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><h3 id="（2）index核心配置："><a href="#（2）index核心配置：" class="headerlink" title="（2）index核心配置："></a>（2）index核心配置：</h3><p><strong><em>actions和mutations中的两个传参，第一个是上下文，方便去取上面的数据或者进行下一步操作</em></strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//引入Vue核心库</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token comment">//引用Vuex</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//响应组件中加的动作</span>    <span class="token function">jia</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// console.log('actions中的jia被调用了',miniStore,value)</span>        context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//执行加</span>    <span class="token constant">JIA</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// console.log('mutations中的JIA被调用了',state,value)</span>        state<span class="token punctuation">.</span>sum <span class="token operator">+=</span> value    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//初始化数据</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    actions<span class="token punctuation">,</span>    mutations<span class="token punctuation">,</span>    state<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><ul><li>组件中读取vuex中的数据：<code>$store.state.sum</code></li><li>组件中修改vuex中的数据：<code>$store.dispatch(&#39;action中的方法名&#39;,数据)</code> 或 <code>$store.commit(&#39;mutations中的方法名&#39;,数据)</code></li></ul><p>备注：若没有网络请求或其他业务逻辑，组件中也可以越过actions，即不写<code>dispatch</code>，直接编写<code>commit</code></p><h3 id="（3）store的getters配置："><a href="#（3）store的getters配置：" class="headerlink" title="（3）store的getters配置："></a>（3）store的getters配置：</h3><ol><li><pre><code>概念：当state中的数据需要经过加工后再使用时，可以使用getters加工。</code></pre></li><li><pre><code>在`store.js`中追加`getters`配置</code></pre></li><li><pre><code>组件中读取数据：`$store.getters.bigSum`</code></pre></li></ol><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> state<span class="token punctuation">.</span>sum <span class="token operator">*</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token operator">...</span>    getters<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h2 id="（4）四个map方法的使用"><a href="#（4）四个map方法的使用" class="headerlink" title="（4）四个map方法的使用"></a>（4）四个map方法的使用</h2><p>帮助引入store的方法到组件里，方便使用；</p><p><em><strong>注意：使用前都要先引入：</strong></em></p><blockquote><p><code>import &#123;mapState,mapGetters,mapMutations,mapActions&#125; from &#39;vuex&#39;</code></p></blockquote><h3 id="mapState方法："><a href="#mapState方法：" class="headerlink" title="mapState方法："></a><strong>mapState方法：</strong></h3><p>用于帮助我们映射<code>state</code>中的数据为计算属性</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//借助mapState生成计算属性：sum、school、subject（对象写法）</span>     <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">'subject'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//借助mapState生成计算属性：sum、school、subject（数组写法）</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">'subject'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><p><strong>mapGetters方法：</strong></p><p>用于帮助我们映射<code>getters</code>中的数据为计算属性</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//借助mapGetters生成计算属性：bigSum（对象写法）</span>    <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">bigSum</span><span class="token operator">:</span><span class="token string">'bigSum'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//借助mapGetters生成计算属性：bigSum（数组写法）</span>    <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'bigSum'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><p> <strong>mapActions方法：</strong></p><p>用于帮助我们生成与<code>actions</code>对话的方法，即：包含</p><blockquote><p>​​​​​​​<code>$store.dispatch(xxx)</code>的函数</p></blockquote><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token comment">//靠mapActions生成：incrementOdd、incrementWait（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">incrementOdd</span><span class="token operator">:</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token literal-property property">incrementWait</span><span class="token operator">:</span><span class="token string">'jiaWait'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">//靠mapActions生成：incrementOdd、incrementWait（数组形式）</span>    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token string">'jiaWait'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>_<strong>使用时注意传参：</strong>_可在模板里面加上括号，如：</p><blockquote><p><code>&lt;button @click=&quot;incrementOdd(n)&quot;&gt;当前求和为奇数再加&lt;/button&gt;</code></p></blockquote><p>其中的参数n是该模板data中的数据</p><p><strong>mapMutations方法：</strong></p><p>用于帮助我们生成与<code>mutations</code>对话的方法，即：包含<code>$store.commit(xxx)</code>的函数</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token comment">//靠mapActions生成：increment、decrement（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">increment</span><span class="token operator">:</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token literal-property property">decrement</span><span class="token operator">:</span><span class="token string">'JIAN'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//靠mapMutations生成：JIA、JIAN（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token string">'JIAN'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre><p>_<strong>备注</strong>_：mapActions与mapMutations使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。</p><h1 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h1><h3 id="配置index"><a href="#配置index" class="headerlink" title="配置index"></a>配置index</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//该文件用于创建Vuex中最为核心的store</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token keyword">import</span> countOptions <span class="token keyword">from</span> <span class="token string">'./count'</span><span class="token keyword">import</span> personOptions <span class="token keyword">from</span> <span class="token string">'./person'</span><span class="token comment">//应用Vuex插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">modules</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">countAbout</span><span class="token operator">:</span>countOptions<span class="token punctuation">,</span><span class="token literal-property property">personAbout</span><span class="token operator">:</span>personOptions<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="模块引入："><a href="#模块引入：" class="headerlink" title="模块引入："></a>模块引入：</h3><p>person：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//人员管理相关的配置</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> nanoid <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'nanoid'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">addPersonWang</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'王'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'ADD_PERSON'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'添加的人必须姓王！'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">addPersonServer</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://api.uixsj.cn/hitokoto/get?type=social'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'ADD_PERSON'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token function">nanoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span>response<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token constant">ADD_PERSON</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mutations中的ADD_PERSON被调用了'</span><span class="token punctuation">)</span>state<span class="token punctuation">.</span>personList<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">personList</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'张三'</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">firstPersonName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> state<span class="token punctuation">.</span>personList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre><p> count：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//求和相关的配置</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">jiaOdd</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'actions中的jiaOdd被调用了'</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">jiaWait</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'actions中的jiaWait被调用了'</span><span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token constant">JIA</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mutations中的JIA被调用了'</span><span class="token punctuation">)</span>state<span class="token punctuation">.</span>sum <span class="token operator">+=</span> value<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token constant">JIAN</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mutations中的JIAN被调用了'</span><span class="token punctuation">)</span>state<span class="token punctuation">.</span>sum <span class="token operator">-=</span> value<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//当前的和</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">'阳光小学'</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">'前端'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre><p> 参考：<a href="https://www.bilibili.com/video/BV1Zy4y1K7SH/?p=105" title="105_尚硅谷Vue技术_Vuex简介_哔哩哔哩_bilibili">105_尚硅谷Vue技术_Vuex简介_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 vue.js javascript 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue脚手架的基本使用</title>
      <link href="/personal-blog-wzz/2022/10/29/Vue%E8%84%9A%E6%89%8B%E6%9E%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/personal-blog-wzz/2022/10/29/Vue%E8%84%9A%E6%89%8B%E6%9E%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1-脚手架全局安装："><a href="#1-脚手架全局安装：" class="headerlink" title="1.脚手架全局安装："></a>1.脚手架全局安装：</h1><h3 id="（1）cmd检查脚手架版本"><a href="#（1）cmd检查脚手架版本" class="headerlink" title="（1）cmd检查脚手架版本"></a>（1）cmd检查脚手架版本</h3><blockquote><p> npm view @vue&#x2F;cli versions</p></blockquote><h3 id="（2）cmd安装指定版本的脚手架："><a href="#（2）cmd安装指定版本的脚手架：" class="headerlink" title="（2）cmd安装指定版本的脚手架："></a>（2）cmd安装指定版本的脚手架：</h3><blockquote><p>npm install @vue&#x2F;cli@4 -g</p></blockquote><h1 id="2-创建一个脚手架："><a href="#2-创建一个脚手架：" class="headerlink" title="2.创建一个脚手架："></a>2.创建一个脚手架：</h1><h3 id="cmd控制台切换到指定的目录命令："><a href="#cmd控制台切换到指定的目录命令：" class="headerlink" title="cmd控制台切换到指定的目录命令："></a>cmd控制台切换到指定的目录命令：</h3><blockquote><p><code>vue create 项目名</code></p></blockquote><h3 id="然后cd到项目里运行："><a href="#然后cd到项目里运行：" class="headerlink" title="然后cd到项目里运行："></a>然后cd到项目里运行：</h3><blockquote><p><code>npm run serve</code></p></blockquote><h1 id="3-结构："><a href="#3-结构：" class="headerlink" title="3.结构："></a>3.结构：</h1><p>运行完<code>npm run serve后，生成代码文件：  </code></p><p><code>      </code></p><p><img src="https://img-blog.csdnimg.cn/img_convert/d7dceaeb939562e4c6166145355ad6bb.png"></p><h1 id="4-修改默认配置："><a href="#4-修改默认配置：" class="headerlink" title="4.修改默认配置："></a>4.修改默认配置：</h1><blockquote><p><code>vue inspect &gt; output.js</code></p></blockquote><p>生成output.js文件看默认配置：</p><p>vue.config.js文件可对脚手架属性精选修改：</p><p>可在 <a href="https://cli.vuejs.org/zh/config/" title="配置参考 | Vue CLI">配置参考 | Vue CLI</a> 进行选择参考</p><h1 id="5-ref属性："><a href="#5-ref属性：" class="headerlink" title="5.ref属性："></a>5.ref属性：</h1><p>vue用来绑定dom元素:</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span>h1 v<span class="token operator">-</span>text<span class="token operator">=</span><span class="token string">"msg"</span> ref<span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token operator">&lt;</span>button ref<span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"showDOM"</span><span class="token operator">></span>点我输出上方的<span class="token constant">DOM</span>元素<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>School ref<span class="token operator">=</span><span class="token string">"sch"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token comment">//引入School组件</span><span class="token keyword">import</span> School <span class="token keyword">from</span> <span class="token string">'./components/School'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'App'</span><span class="token punctuation">,</span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>School<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">'欢迎学习Vue！'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token function">showDOM</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token comment">//真实DOM元素</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>btn<span class="token punctuation">)</span> <span class="token comment">//真实DOM元素</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>sch<span class="token punctuation">)</span> <span class="token comment">//School组件的实例对象（vc）</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h1 id="6-props属性："><a href="#6-props属性：" class="headerlink" title="6.props属性："></a>6.props属性：</h1><p>APP.vue父类：</p><blockquote><p>  &lt;Student name&#x3D;”李四” sex&#x3D;”女” :age&#x3D;”18”&#x2F;&gt;</p></blockquote><p> 子类Student.vue：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>msg<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token operator">&lt;</span>h2<span class="token operator">></span>学生姓名：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span><span class="token operator">&lt;</span>h2<span class="token operator">></span>学生性别：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>sex<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span><span class="token operator">&lt;</span>h2<span class="token operator">></span>学生年龄：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>myAge<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"updateAge"</span><span class="token operator">></span>尝试修改收到的年龄<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'Student'</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">'我是一个学生'</span><span class="token punctuation">,</span><span class="token literal-property property">myAge</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token function">updateAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>myAge<span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">//简单声明接收</span><span class="token comment">// props:['name','age','sex'] </span><span class="token comment">//接收的同时对数据进行类型限制</span><span class="token comment">/* props:&#123;name:String,age:Number,sex:String&#125; */</span><span class="token comment">//接收的同时对数据：进行类型限制+默认值的指定+必要性的限制</span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span> <span class="token comment">//name的类型是字符串</span><span class="token literal-property property">required</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//name是必要的</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">99</span> <span class="token comment">//默认值</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">required</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h1 id="7-minin混合属性："><a href="#7-minin混合属性：" class="headerlink" title="7.minin混合属性："></a>7.minin混合属性：</h1><p>添加minin.js文件</p><p><img src="https://img-blog.csdnimg.cn/img_convert/3de6332060b9371a4e1fe3fe9b8613a5.png"></p><p> minin文件：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> hunhe <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'你好啊！'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">const</span> hunhe2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span>      <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre><p> vue文件引入：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//引入一个hunhe</span>   <span class="token keyword">import</span> <span class="token punctuation">&#123;</span>hunhe<span class="token punctuation">,</span>hunhe2<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'../mixin'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'School'</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'学校名'</span><span class="token punctuation">,</span>        <span class="token literal-property property">address</span><span class="token operator">:</span><span class="token string">'河南'</span><span class="token punctuation">,</span>        <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">666</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">mixins</span><span class="token operator">:</span><span class="token punctuation">[</span>hunhe<span class="token punctuation">,</span>hunhe2<span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span></code></pre><h1 id="8-plugin插件："><a href="#8-plugin插件：" class="headerlink" title="8.plugin插件："></a>8.plugin插件：</h1><p>建立plugin.js文件：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">Vue<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span>  <span class="token comment">//全局过滤器</span>  Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'mySlice'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">//定义全局指令</span>  Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">'fbind'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>  <span class="token comment">//指令与元素成功绑定时（一上来）</span>  <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>binding</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  element<span class="token punctuation">.</span>value <span class="token operator">=</span> binding<span class="token punctuation">.</span>value  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//指令所在元素被插入页面时</span>  <span class="token function">inserted</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>binding</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  element<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//指令所在的模板被重新解析时</span>  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>binding</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  element<span class="token punctuation">.</span>value <span class="token operator">=</span> binding<span class="token punctuation">.</span>value  <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">//定义混入</span>  Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">//给Vue原型上添加一个方法（vm和vc就都能用了）</span>  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">hello</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你好啊'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 vue.js 前端 javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js和java交互websocket实现实时聊天</title>
      <link href="/personal-blog-wzz/2022/10/15/js%E5%92%8Cjava%E4%BA%A4%E4%BA%92websocket%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E8%81%8A%E5%A4%A9/"/>
      <url>/personal-blog-wzz/2022/10/15/js%E5%92%8Cjava%E4%BA%A4%E4%BA%92websocket%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E8%81%8A%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p><strong>目录</strong></p><p><a href="#1.%E8%BF%90%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%88%E5%AE%9E%E7%8E%B0%E6%95%88%E6%9E%9C%EF%BC%89%EF%BC%9A">1.运用场景（实现效果）：</a></p><p><a href="#%C2%A02.%E4%BB%A3%E7%A0%81%E5%8F%8A%E5%85%B6%E8%AE%B2%E8%A7%A3%EF%BC%9A"> 2.代码及其讲解：</a></p><p><a href="#%EF%BC%881%EF%BC%89html%EF%BC%9A">js配置：</a></p><p><a href="#(1)%E6%97%B6%E9%97%B4%E5%88%A4%E6%96%AD%E5%87%BD%E6%95%B0%EF%BC%9A">(1)时间判断函数：</a></p><p><a href="#(2)%E5%BB%BA%E7%AB%8Bws%E8%BF%9E%E6%8E%A5%EF%BC%9A">(2)建立ws连接：</a></p><p><a href="#%E7%BB%93%E6%9D%9F%EF%BC%81">结束！</a></p><hr><h1 id="1-运用场景（实现效果）："><a href="#1-运用场景（实现效果）：" class="headerlink" title="1.运用场景（实现效果）："></a>1.运用场景（实现效果）：</h1><p>        前端运用原生js来与后端提供的ws进行交互，实现在线实时聊天，离线储存数据方便读取聊天记录的效果，效果图如下：</p><p><img src="https://img-blog.csdnimg.cn/963b764231874839b2ae0b8d79e6c9c9.png"></p><h1 id="2-代码及其讲解："><a href="#2-代码及其讲解：" class="headerlink" title="2.代码及其讲解："></a>2.代码及其讲解：</h1><h2 id="js配置："><a href="#js配置：" class="headerlink" title="js配置："></a>js配置：</h2><h3 id="1-时间判断函数："><a href="#1-时间判断函数：" class="headerlink" title="(1)时间判断函数："></a>(1)时间判断函数：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> h <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  h <span class="token operator">=</span> h <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> h <span class="token operator">:</span> h<span class="token punctuation">;</span>  <span class="token keyword">var</span> m <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  m <span class="token operator">=</span> m <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> m <span class="token operator">:</span> m<span class="token punctuation">;</span>  <span class="token keyword">var</span> s <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  s <span class="token operator">=</span> s <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> s <span class="token operator">:</span> s<span class="token punctuation">;</span>  <span class="token keyword">var</span> year <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> month <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  month <span class="token operator">=</span> month <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> month <span class="token operator">:</span> month<span class="token punctuation">;</span>  <span class="token keyword">var</span> dates <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> result <span class="token operator">=</span> year <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> dates <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> h <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> s<span class="token punctuation">;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//获取当前时间</span><span class="token keyword">function</span> <span class="token function">getprTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> chattime <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'chattime'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  chattime <span class="token operator">=</span> chattime<span class="token punctuation">[</span>chattime<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>  <span class="token keyword">return</span> chattime<span class="token punctuation">&#125;</span><span class="token comment">//获取的最后一个时间框的时间</span><span class="token keyword">function</span> <span class="token function">getfirstTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> chattime <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'chattime'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  chattime <span class="token operator">=</span> chattime<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>  <span class="token keyword">return</span> chattime<span class="token punctuation">&#125;</span><span class="token comment">//获取的最后第一个时间框的时间</span><span class="token keyword">function</span> <span class="token function">recontrasttime</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> nowtime</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowtime<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> times <span class="token operator">=</span> t1<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> data<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> days <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>times <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">24</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>days <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> leave <span class="token operator">=</span> times <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>leave <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> h_leave <span class="token operator">=</span> leave <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>h_leave <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> min <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//比较以前和现在两者的时间，来判断是否添加时间框</span></code></pre><h3 id="2-建立ws连接："><a href="#2-建立ws连接：" class="headerlink" title="(2)建立ws连接："></a>(2)建立ws连接：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> websocket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">creatws</span><span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">userid</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'WebSocket'</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//用于创建WebSocket对象，webSocketTest对应的是java类的注解值</span>    websocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ws://152.136.99.236:8080/websocket/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>userid<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">hintFn</span><span class="token punctuation">(</span><span class="token string">"wrong"</span><span class="token punctuation">,</span><span class="token string">"当前浏览器不支持"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//连接发生错误的时候回调方法；</span>  websocket<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">hintFn</span><span class="token punctuation">(</span><span class="token string">"warning"</span><span class="token punctuation">,</span><span class="token string">"连接错误"</span><span class="token punctuation">)</span>    <span class="token comment">// alert("连接错误");</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//连接成功时建立回调方法</span>  websocket<span class="token punctuation">.</span><span class="token function-variable function">onopen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//WebSocket已连接上，使用send()方法发送数据</span>    <span class="token function">hintFn</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token string">"连接成功"</span><span class="token punctuation">)</span>    <span class="token comment">// alert("连接成功");</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">//  收到消息的回调方法</span>  websocket<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>users <span class="token operator">!=</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> data<span class="token punctuation">.</span>users<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>userId <span class="token operator">==</span> toid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          useronline<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span>          useronline<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">recontrasttime</span><span class="token punctuation">(</span><span class="token function">getprTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        messagebody<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div class="amessage">          &lt;div class="chattimebox">&lt;span class="chattime"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>&lt;/div>          &lt;div class="chat otherchat">              &lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>userimg<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" alt="">              &lt;div class="chattext"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>          &lt;/div>        &lt;/div>    </span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        messagebody<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div class="amessage">          &lt;div class="chat otherchat">              &lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>userimg<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" alt="">              &lt;div class="chattext"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>          &lt;/div>        &lt;/div>    </span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token comment">//渲染数据</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>nowpage<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        messagebody<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> messagebody<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">//连接关闭的回调方法</span>  websocket<span class="token punctuation">.</span><span class="token function-variable function">onclose</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">closed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">'warning'</span><span class="token punctuation">,</span><span class="token string">"连接已关闭"</span><span class="token punctuation">)</span>    <span class="token comment">// alert("关闭成功");</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">closed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    websocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sFinite</span><span class="token punctuation">(</span><span class="token string">'warning'</span><span class="token punctuation">,</span><span class="token string">"连接已关闭"</span><span class="token punctuation">)</span>    <span class="token comment">// alert("点击关闭");</span>  <span class="token punctuation">&#125;</span>  sendchat<span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isnull</span><span class="token punctuation">(</span><span class="token function">judgeStrs</span><span class="token punctuation">(</span>chattext<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token function">hintFn</span><span class="token punctuation">(</span><span class="token string">'warning'</span><span class="token punctuation">,</span> <span class="token string">"请输入你要输入的内容"</span><span class="token punctuation">)</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> newob <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">to</span><span class="token operator">:</span> toid<span class="token punctuation">,</span>      <span class="token literal-property property">from</span><span class="token operator">:</span> fromid<span class="token punctuation">,</span>      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token function">judgeStrs</span><span class="token punctuation">(</span>chattext<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">recontrasttime</span><span class="token punctuation">(</span><span class="token function">getprTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      messagebody<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">      &lt;div class="amessage">      &lt;div class="chattimebox">&lt;span class="chattime"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>&lt;/div>      &lt;div class="chat mychat">      &lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>myimg<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" alt="">      &lt;div class="chattext"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chattext<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>        &lt;/div>        &lt;/div>        </span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        messagebody<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div class="amessage">        &lt;div class="chat mychat">        &lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>myimg<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" alt="">        &lt;div class="chattext"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chattext<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>        &lt;/div>        &lt;/div>        </span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span>      websocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newob<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//给后台发送数据</span>    messagebody<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> messagebody<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>    chattext<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span></code></pre><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> websocket 网络协议 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生JS多文件上传（增加，删除队列中准备上传的文件）</title>
      <link href="/personal-blog-wzz/2022/10/08/%E5%8E%9F%E7%94%9FJS%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E5%A2%9E%E5%8A%A0%EF%BC%8C%E5%88%A0%E9%99%A4%E9%98%9F%E5%88%97%E4%B8%AD%E5%87%86%E5%A4%87%E4%B8%8A%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/10/08/%E5%8E%9F%E7%94%9FJS%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E5%A2%9E%E5%8A%A0%EF%BC%8C%E5%88%A0%E9%99%A4%E9%98%9F%E5%88%97%E4%B8%AD%E5%87%86%E5%A4%87%E4%B8%8A%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p><strong>目录</strong></p><p><a href="#1.%E8%BF%90%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%88%E5%AE%9E%E7%8E%B0%E6%95%88%E6%9E%9C%EF%BC%89%EF%BC%9A">1.运用场景（实现效果）：</a></p><p><a href="#%C2%A02.%E4%BB%A3%E7%A0%81%E5%8F%8A%E5%85%B6%E8%AE%B2%E8%A7%A3%EF%BC%9A"> 2.代码及其讲解：</a></p><p><a href="#%EF%BC%881%EF%BC%89html%EF%BC%9A">（1）html：</a></p><p><a href="#%EF%BC%882%EF%BC%89js%EF%BC%9A">（2）js：</a></p><p><a href="#%EF%BC%883%EF%BC%89node%E5%B0%81%E8%A3%85%E6%8E%A5%E5%8F%A3%E6%8E%A5%E6%94%B6%E6%96%87%E4%BB%B6%EF%BC%9A">（3）node封装接口接收文件：</a></p><p><a href="#%E7%BB%93%E6%9D%9F%EF%BC%81">结束</a></p><h1 id="1-运用场景（实现效果）："><a href="#1-运用场景（实现效果）：" class="headerlink" title="1.运用场景（实现效果）："></a>1.运用场景（实现效果）：</h1><p>        前端运用原生js来实现多图片的上传，并可以实现预览，队列删除，添加的效果。实现图片上传前的可控制化的效果，效果图如下：</p><p><img src="https://img-blog.csdnimg.cn/67563952cd9a46f88b74fd859c3f449d.png"></p><h1 id="2-代码及其讲解："><a href="#2-代码及其讲解：" class="headerlink" title="2.代码及其讲解："></a>2.代码及其讲解：</h1><h2 id="（1）html："><a href="#（1）html：" class="headerlink" title="（1）html："></a>（1）html：</h2><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>publish_files<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-file-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>点击上传图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.png,.jpg,.jpeg,image/png,image/jpg,image/jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadfile<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;button  onclick="look()">看文件&lt;/button> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h2 id="（2）js："><a href="#（2）js：" class="headerlink" title="（2）js："></a>（2）js：</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//多张</span><span class="token comment">// window.onload=function()&#123;</span><span class="token keyword">var</span> input<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uploadfile"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> div<span class="token punctuation">;</span><span class="token keyword">var</span> allfileList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建队列暂存form文件</span><span class="token comment">// 当用户上传时触发事件</span>input<span class="token punctuation">.</span><span class="token function-variable function">onchange</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//处理图片并添加都dom中的函数</span><span class="token keyword">let</span> sortnum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//标记文件索引</span><span class="token keyword">var</span> <span class="token function-variable function">readFile</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 获取input里面的文件组</span>    fileList<span class="token operator">=</span>obj<span class="token punctuation">.</span>files<span class="token punctuation">;</span>    <span class="token comment">//对文件组进行遍历，可以到控制台打印出fileList去看看</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>fileList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> reader<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 当文件读取成功时执行的函数</span>        <span class="token keyword">let</span> thisfile<span class="token operator">=</span>fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            allfileList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">file</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sortnum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>thisfile<span class="token punctuation">)</span><span class="token comment">//添加队列中</span>            div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span style='display:none;'></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sortnum<span class="token operator">++</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>&lt;div class="deletediv" onclick='opendetele(this)'>删除&lt;/div>&lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" /></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>            <span class="token comment">//this.result获取图片本地地址，进行预览；</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"img-box"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//html中添加元素，方便预览</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">look</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> option<span class="token operator">=</span>select<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'option'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> al_id<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> option<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>option<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>selected<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            al_id<span class="token operator">=</span>option<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    allfileList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'al_id'</span><span class="token punctuation">,</span> al_id<span class="token punctuation">)</span>    allfileList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'describes'</span><span class="token punctuation">,</span>publish_text<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment">//添加其他属性</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>allfileList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>allfileList<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请选择你要上传的图片！'</span><span class="token punctuation">)</span>        allfileList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'al_id'</span><span class="token punctuation">)</span>        allfileList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'describes'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isnull</span><span class="token punctuation">(</span>publish_text<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请填写你对图片的描述！'</span><span class="token punctuation">)</span>        allfileList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'al_id'</span><span class="token punctuation">)</span>        allfileList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'describes'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/api/Releasedynamics'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> allfileList<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>err<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>msg<span class="token operator">==</span><span class="token string">'OK'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"上传成功！"</span><span class="token punctuation">)</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">"/Personalhomepage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"上传失败！"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token comment">// console.log(err)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    allfileList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'al_id'</span><span class="token punctuation">)</span>    allfileList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'describes'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">opendetele</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> thishtml<span class="token operator">=</span>event<span class="token punctuation">.</span>parentElement<span class="token punctuation">;</span>    <span class="token keyword">let</span> thisn<span class="token operator">=</span>event<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>    allfileList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">file</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>thisn<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件序列中的暂存文件</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"img-box"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>thishtml<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//删除页面显示的文件div</span><span class="token punctuation">&#125;</span></code></pre><h2 id="（3）node封装接口接收文件："><a href="#（3）node封装接口接收文件：" class="headerlink" title="（3）node封装接口接收文件："></a>（3）node封装接口接收文件：</h2><p><a href="https://blog.csdn.net/Azbtt/article/details/125699912?spm=1001.2014.3001.5501" title="node封装传formdata数据的接口（多文件上传）_阿泽不会飞的博客-CSDN博客_node 接口封装">node封装传formdata数据的接口（多文件上传）_阿泽不会飞的博客-CSDN博客_node 接口封装</a></p><p>上博客有具体讲解</p><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1><p>坚持，承担，稳定<img src="https://img-blog.csdnimg.cn/9eaa48013eb844bfa402028d640a3fe4.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 javascript 前端 node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>细谈this指向</title>
      <link href="/personal-blog-wzz/2022/09/24/%E7%BB%86%E8%B0%88this%E6%8C%87%E5%90%91/"/>
      <url>/personal-blog-wzz/2022/09/24/%E7%BB%86%E8%B0%88this%E6%8C%87%E5%90%91/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p><strong>目录</strong></p><p><a href="#YCXnu">1.作为对象的方法调用：</a></p><p><a href="#cEGad">2.作为普通函数调用</a></p><p><a href="#sw9vg">3.构造器调用</a></p><p><a href="#y9By7">4、call或apply调用</a></p><p><a href="#bVlog">5.箭头函数</a></p><p><a href="#rTBE3">6.call和apply</a></p><p><a href="#GLwta">(1)介绍：</a></p><p><a href="#L5uHi">（2）call和apply能做什么？</a></p><p><a href="#Xib1u">7.例题：</a></p><p><a href="#rj26N">（1）</a></p><p><a href="#%E7%BB%93%E6%9D%9F%EF%BC%81">结束！</a></p><hr><h1 id="1-作为对象的方法调用："><a href="#1-作为对象的方法调用：" class="headerlink" title="1.作为对象的方法调用："></a>1.<strong>作为对象的方法调用：</strong></h1><p>当函数作为对象的方法被调用时，this指向该对象</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">'yuguang'</span><span class="token punctuation">,</span>    <span class="token function-variable function">getName</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true yuguang</span></code></pre><h1 id="2-作为普通函数调用"><a href="#2-作为普通函数调用" class="headerlink" title="2.作为普通函数调用"></a>2.<strong>作为普通函数调用</strong></h1><p>当函数不作为对象的属性被调用，而是以普通函数的方式，this总是指向全局对象（在浏览器中，通常是Window对象）</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'yuguang'</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// yuguang</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'老王'</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yuguang'</span><span class="token punctuation">,</span>    <span class="token function-variable function">getName</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> getNew <span class="token operator">=</span> obj<span class="token punctuation">.</span>getName<span class="token punctuation">;</span><span class="token function">getNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 老王getNew重新定义一个函数，我window下的，this是windeow</span></code></pre><h1 id="3-构造器调用"><a href="#3-构造器调用" class="headerlink" title="3.构造器调用"></a>3.<strong>构造器调用</strong></h1><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">MyClass</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'yuguang'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token comment">//yuguang</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">MyClass</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> myClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'myClass:'</span><span class="token punctuation">,</span> myClass<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;name: 2&#125; return的函数会直接覆盖掉age属性</span></code></pre><h1 id="4、call或apply调用"><a href="#4、call或apply调用" class="headerlink" title="4、call或apply调用"></a><strong>4、call或apply调用</strong></h1><p>跟普通的函数调用相比，用call和apply可以动态的改变函数的this</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token function-variable function">getName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>num <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> num<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 可以理解成在 obj2的作用域下调用了 obj1.getName()函数</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2 + 2 = 4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj2<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2 + 2 = 4</span></code></pre><h1 id="5-箭头函数"><a href="#5-箭头函数" class="headerlink" title="5.箭头函数"></a>5.<strong>箭头函数</strong></h1><p>箭头函数不会创建自己的this，它只会从自己的作用域链的上一层继承this。</p><p>因此，在下面的代码中，传递给getVal函数内的this并不是调用者自身，而是外部的this～</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token function-variable function">getVal</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>obj<span class="token punctuation">.</span><span class="token function">getVal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>    <span class="token function-variable function">getName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> getName2 <span class="token operator">=</span> obj<span class="token punctuation">.</span>getName<span class="token punctuation">;</span><span class="token function">getName2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span><span class="token comment">// undefined</span></code></pre><h1 id="6-call和apply"><a href="#6-call和apply" class="headerlink" title="6.call和apply"></a>6.call和apply</h1><h2 id="1-介绍："><a href="#1-介绍：" class="headerlink" title="(1)介绍："></a>(1)介绍：</h2><p>先来看区别，是因为它们几乎没有区别，下文代码实例call和apply都可以轻易的切换。</p><p>当它们被设计出来时要做到的事情一摸一样，唯一的区别就在于传参的格式不一样</p><p>apply接受两个参数:</p><p>_        第一个参数指定了函数体内this对象的指向_</p><p>_        第二个参数为一个带下标的参数集合（可以是数组或者类数组）_</p><p>call接受的参数不固定:</p><p>_        第一个参数指定了函数体内this对象的指向_</p><p>_        第二个参数及以后为函数调用的参数        _</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'id:'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token number">21</span><span class="token punctuation">;</span> <span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// id: 42</span></code></pre><h2 id="（2）call和apply能做什么？"><a href="#（2）call和apply能做什么？" class="headerlink" title="（2）call和apply能做什么？"></a>（2）call和apply能做什么？</h2><p>使用一个指定的 this 值和单独给出的一个或多个参数来调用一个函数</p><ul><li><ul><li>调用构造函数来实现继承;</li><li>调用函数并且指定上下文的 this;</li><li>调用函数并且不指定第一个参数</li></ul></li></ul><p><strong>1.调用构造函数来实现继承</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Product</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">Food</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">Product</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//</span><span class="token keyword">this</span><span class="token punctuation">.</span>category <span class="token operator">=</span> food<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> hotDog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Food</span><span class="token punctuation">(</span><span class="token string">'hotDog'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> <strong>2.调用函数并且指定上下文的</strong> <strong>this</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yuguang'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">showName</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span></code></pre><h1 id="7-例题："><a href="#7-例题：" class="headerlink" title="7.例题："></a>7.例题：</h1><h2 id="（1）"><a href="#（1）" class="headerlink" title="（1）"></a>（1）</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> dev<span class="token operator">=</span><span class="token string">'efb'</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">dev</span><span class="token operator">:</span> <span class="token string">'bfe'</span><span class="token punctuation">,</span>    <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dev    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dev    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">c</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dev    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">d</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dev      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">e</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">f</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">g</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">h</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">i</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dev      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//严格状态下：</span><span class="token comment">// bfe</span><span class="token comment">// bfe</span><span class="token comment">// undefined  箭头函数this=>window</span><span class="token comment">// bfe直接调用</span><span class="token comment">// bfe</span><span class="token comment">// undefined</span><span class="token comment">// undefined箭头函数</span><span class="token comment">// undefined</span><span class="token comment">// bfe</span><span class="token comment">//非严格状态下：</span><span class="token comment">//undefined全换成efd</span></code></pre><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1><p>太务实会使人身心疲惫，缺乏精神上的价值；太务虚很多时候不能做好事情，缺乏物质上的价值。</p><p>怎样平衡好务实和务虚呢？</p>]]></content>
      
      
      <categories>
          
          <category> 前端笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 开发语言 ecmascript 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组(Array的方法)：</title>
      <link href="/personal-blog-wzz/2022/09/15/%E6%95%B0%E7%BB%84(Array%E7%9A%84%E6%96%B9%E6%B3%95)%EF%BC%9A/"/>
      <url>/personal-blog-wzz/2022/09/15/%E6%95%B0%E7%BB%84(Array%E7%9A%84%E6%96%B9%E6%B3%95)%EF%BC%9A/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1-计算方法："><a href="#1-计算方法：" class="headerlink" title="1.计算方法："></a>1.计算方法：</h1><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> c<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> cc<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'black'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cc<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">'qqq'</span><span class="token punctuation">,</span><span class="token string">'www'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 3</span><span class="token comment">// [ 'red', 'green', 'black' ]</span><span class="token comment">// black</span><span class="token comment">// [ 'red', 'green' ]</span><span class="token comment">// red</span><span class="token comment">// [ 'green' ]</span><span class="token comment">// 3</span><span class="token comment">// [ 'qqq', 'www', 'green' ]</span><span class="token comment">// [ 'green', 'www', 'qqq' ]</span><span class="token comment">// [ 2, 34, 5, 76 ]</span></code></pre><h1 id="2-操作方法："><a href="#2-操作方法：" class="headerlink" title="2.操作方法："></a>2.操作方法：</h1><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [</span><span class="token comment">//     34, 76,  2, 5,</span><span class="token comment">//    111, 55, 66</span><span class="token comment">//  ]</span></code></pre><h3 id="splice方法："><a href="#splice方法：" class="headerlink" title="splice方法："></a>splice方法：</h3><p>1.删除-用于删除元素，两个参数，第一个参数（要删除第一项的位置），第二个参数（要删除的项数）</p><p>2.插入-向数组指定位置插入任意项元素。三个参数，第一个参数（起始位置），第二个参数（0），第三个参数（插入的项数）</p><p>3.替换-向数组指定位置插入任意项元素，同时删除任意数量的项，三个参数。第一个参数（起始位置），第二个参数（删除的项数），第三个参数（插入任意数量的项）</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span><span class="token comment">// 删除</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 删除  -> 从下标为0开始,项数为1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2,3]</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 删除  -> 从下标为0开始,项数为2</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span><span class="token comment">//替换</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 替换 -> 从下标为0开始,项数为1的数组元素替换成4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [4,2,3]</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 替换 -> 从下标为0开始,项数为2的数组元素替换成4(即4,2整体替换成4)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [4,3]</span><span class="token comment">//添加</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 表示在下标为1处添加一项5</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [1,5,2,3]   </span></code></pre><h1 id="3-搜索方法："><a href="#3-搜索方法：" class="headerlink" title="3.搜索方法："></a>3.搜索方法：</h1><h3 id="（1）严格相等："><a href="#（1）严格相等：" class="headerlink" title="（1）严格相等："></a>（1）严格相等：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">576</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,23,4,576,78,9]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// true</span><span class="token comment">// 2</span><span class="token comment">// 4</span></code></pre><h3 id="（2）断句函数："><a href="#（2）断句函数：" class="headerlink" title="（2）断句函数："></a>（2）断句函数：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> p<span class="token operator">=</span><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'laoba'</span><span class="token punctuation">,</span>        <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">8</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'wzz'</span><span class="token punctuation">,</span>        <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">19</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'kun'</span><span class="token punctuation">,</span>        <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">30</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token keyword">let</span> p1<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//find的当前元素</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//find的当前元素索引</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//find的全部元素</span>    <span class="token keyword">return</span> element<span class="token punctuation">.</span>age<span class="token operator">></span><span class="token number">18</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//&#123; name: 'wzz', age: 19 &#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> element<span class="token punctuation">.</span>age<span class="token operator">></span><span class="token number">18</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1  返回找到的索引 </span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 javascript 前端 开发语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BFC(块格式化上下文)</title>
      <link href="/personal-blog-wzz/2022/09/10/BFC(%E5%9D%97%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87)/"/>
      <url>/personal-blog-wzz/2022/09/10/BFC(%E5%9D%97%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1-概念："><a href="#1-概念：" class="headerlink" title="1.概念："></a>1.概念：</h1><p>块格式化上下文（Block Formatting Context，BFC）是Web页面的可视化CSS渲染的一部分，是布局过程中生成块级盒子的区域，也是浮动元素与其他元素的交互限定区域。</p><h1 id="2-创建BFC："><a href="#2-创建BFC：" class="headerlink" title="2.创建BFC："></a>2.创建BFC：</h1><ol><li>开启浮动：浮动元素 float ＝ left | right 或 inherit<strong>（≠ none）；</strong></li><li>绝对定位元素 position ＝ absolute 或 fixed；</li><li>设置display ＝ inline-block | flex | inline-flex | table-cell 或 table-caption</li><li>设置overflow ＝ hidden | auto 或 scroll** (≠ visible)**</li></ol><h2 id="3-BFC-的特性："><a href="#3-BFC-的特性：" class="headerlink" title="3.BFC 的特性："></a>3.BFC 的特性：</h2><ol><li>BFC 是一个独立的容器，容器内子元素不会影响容器外的元素。反之亦如此。</li><li>盒子从顶端开始垂直地一个接一个地排列，盒子之间垂直的间距是由 margin 决定的。</li><li>在同一个 BFC 中，两个相邻的块级盒子的<strong>垂直外边距</strong>会发生重叠。</li><li><strong>BFC 区域不会和 float box 发生重叠。</strong></li><li><strong>BFC 能够识别并包含浮动元素，当计算其区域的高度时，浮动元素也可以参与计算了。</strong></li></ol><h1 id="4-BFC-的作用："><a href="#4-BFC-的作用：" class="headerlink" title="**4.**BFC 的作用："></a>**4.**BFC 的作用：</h1><h3 id="1-解决高度塌陷："><a href="#1-解决高度塌陷：" class="headerlink" title="1.解决高度塌陷："></a>1.解决高度塌陷：</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sibling<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sibling<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>     <span class="token comment">/* creates block formatting context */</span>     <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token selector">.container .Sibling</span> <span class="token punctuation">&#123;</span>     <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>     <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> 1px black solid<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>效果：</p><p><img src="https://img-blog.csdnimg.cn/9dbf8eee4a6c42e59cc984daf2f42824.png"></p><p> .container里面加上：overflow: hidden：</p><p><img src="https://img-blog.csdnimg.cn/7beea6355cc64acdb9392bea2984e0e0.png"></p><h3 id="2-导致外边距折叠："><a href="#2-导致外边距折叠：" class="headerlink" title="2.导致外边距折叠："></a>2.导致外边距折叠：</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Sibling 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Sibling 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.Container</span> <span class="token punctuation">&#123;</span>     <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token selector">p</span> <span class="token punctuation">&#123;</span>     <span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span>     <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span></code></pre><p>效果：</p><p><img src="https://img-blog.csdnimg.cn/7887a9009df94a9db4c24d0af3b20f52.png"></p><p> .container里面加上：overflow: hidden：</p><p><img src="https://img-blog.csdnimg.cn/cc3c5242260b47b3a64eb3802cc2a93a.png"></p>]]></content>
      
      
      <categories>
          
          <category> 前端笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 前端 html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js中的原型prototype的理解+实例</title>
      <link href="/personal-blog-wzz/2022/09/02/js%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%9E%8Bprototype%E7%9A%84%E7%90%86%E8%A7%A3+%E5%AE%9E%E4%BE%8B/"/>
      <url>/personal-blog-wzz/2022/09/02/js%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%9E%8Bprototype%E7%9A%84%E7%90%86%E8%A7%A3+%E5%AE%9E%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p><strong>目录</strong></p><p><a href="#u3f4bece6">1.函数的prototype属性：</a></p><p><a href="#u573f39c7">2.基本使用：</a></p><p><a href="#%C2%A0%E5%AE%9E%E4%BE%8B%EF%BC%9A"> 实例：</a></p><p><a href="#%C2%A03.%E6%98%BE%E5%BC%8F%E5%8E%9F%E5%9E%8B%EF%BC%8C%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B%EF%BC%9A"> 3.显式原型，隐式原型：</a></p><p><a href="#%C2%A0%E5%AE%9E%E4%BE%8B%EF%BC%9A"> 实例：</a></p><p><a href="#4.%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%90%86%E8%A7%A3%EF%BC%9A%C2%A0">4.原型链理解： </a></p><p><a href="#u64827d96">1)概念：</a></p><p><a href="#%C2%A0%E7%90%86%E8%A7%A3%E5%9B%BE%EF%BC%9A"> 理解图：</a></p><p><a href="#5.instanceof%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%9A">5.instanceof的用法：</a></p><p><a href="#6.%E6%95%B4%E4%BD%93%E7%90%86%E8%A7%A3%EF%BC%9A%C2%A0">6.整体理解： </a></p><p><a href="#7.%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BE%8B%EF%BC%9A">7.两个实例：</a></p><p><a href="#%EF%BC%881%EF%BC%89">（1）</a></p><p><a href="#%C2%A0%EF%BC%882%EF%BC%89"> （2）</a></p><hr><h1 id="1-函数的prototype属性："><a href="#1-函数的prototype属性：" class="headerlink" title="1.函数的prototype属性："></a>1.<strong>函数的prototype属性：</strong></h1><p>1）每个函数都有一个prototype属性，它默认指向一个object空对象（称作：原型对象）；</p><p>2）原型东西有一个属性constructor，它指向函数对象；</p><h1 id="2-基本使用："><a href="#2-基本使用：" class="headerlink" title="2.基本使用："></a>2.<strong>基本使用：</strong></h1><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>People<span class="token punctuation">.</span><span class="token function-variable function">say</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"说！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">People</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">===</span>People<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span class="token class-name">People</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">name</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"wang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//wang</span>p<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//报错</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span>p<span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token string">"19"</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//19</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">People</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">isPrototypeOf</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">==</span><span class="token class-name">People</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span></code></pre><blockquote><p>原对象里面的方法不可创建继承，可以通过对象原型对新对象进行方法的添加。</p></blockquote><blockquote><p>isPrototypeOf()        &#x2F;&#x2F;判断原型</p><p>getPrototypeOf()        &#x2F;&#x2F;获取原型</p></blockquote><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"说！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  People<span class="token punctuation">.</span><span class="token function-variable function">say</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"说111！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">var</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  p<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//说！</span></code></pre><blockquote><p> 用this遍历原对象里面的属性可继承使用； </p></blockquote><h1 id="3-显式原型，隐式原型："><a href="#3-显式原型，隐式原型：" class="headerlink" title="3.显式原型，隐式原型："></a>3.<strong>显式原型，隐式原型：</strong></h1><p><strong>1）基本概念：</strong> </p><p><img src="https://img-blog.csdnimg.cn/img_convert/5119b3fdb4008aace8751834f92e45e6.png"></p><p><strong>逻辑图：</strong></p><p><img src="https://img-blog.csdnimg.cn/img_convert/c326db59eb86f7ab6abcdec42450d403.png"></p><h3 id="实例：-1"><a href="#实例：-1" class="headerlink" title="实例："></a>实例：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">People</span><span class="token punctuation">(</span><span class="token parameter">names</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">n</span><span class="token operator">:</span>names<span class="token punctuation">;</span>  <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token string">'18'</span><span class="token punctuation">&#125;</span>People<span class="token punctuation">.</span><span class="token function-variable function">say</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"说！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">People</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">===</span>People<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span class="token class-name">People</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">name</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"wang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span><span class="token function-variable function">sayage</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>p<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//wang</span><span class="token comment">// p.say();//报错</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span>p<span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token string">"19"</span>p<span class="token punctuation">.</span><span class="token function">sayage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//20</span><span class="token comment">//  People.sayage();//报错</span><span class="token class-name">People</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">sayage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//20</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//19</span></code></pre><h1 id="4-原型链理解："><a href="#4-原型链理解：" class="headerlink" title="4.原型链理解："></a><strong>4.原型链理解：</strong></h1><h2 id="1-概念："><a href="#1-概念：" class="headerlink" title="1)概念："></a><strong>1)概念：</strong></h2><p><img src="https://img-blog.csdnimg.cn/img_convert/b456a175e50f53594eeef0cf1bbc5629.png"></p><h3 id="理解图："><a href="#理解图：" class="headerlink" title="理解图："></a><strong>理解图：</strong></h3><p><img src="https://img-blog.csdnimg.cn/img_convert/32d4f3dbdeeebce6872a4cfa1f425fcc.png"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">F</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//null</span><span class="token number">2</span>）<span class="token number">1.</span>函数<span class="token keyword">function</span>的__proto__都一样；<span class="token number">2</span><span class="token punctuation">.</span>Object是Function的实例；<span class="token number">3.</span>所有函数都是Function的实例，包括Function本身；Object<span class="token punctuation">.</span>__proto__<span class="token operator">==</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span><span class="token comment">//true</span><span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token comment">//true</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token comment">//false</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">Function</span>；<span class="token comment">//true</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token comment">//true</span>Function<span class="token punctuation">.</span>__proto__<span class="token operator">==</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span><span class="token comment">//true </span></code></pre><p> <strong>原型链的实例1：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token class-name">F</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token string">"xxx"</span><span class="token punctuation">;</span><span class="token keyword">var</span> f1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//xxx</span><span class="token keyword">var</span> f2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f2<span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token string">"yyy"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>a<span class="token punctuation">,</span>f2<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//xxx yyy</span><span class="token keyword">function</span> <span class="token constant">P</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">P</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setname</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> p1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">P</span><span class="token punctuation">(</span><span class="token string">"wang"</span><span class="token punctuation">,</span><span class="token string">"19"</span><span class="token punctuation">)</span>p1<span class="token punctuation">.</span><span class="token function">setname</span><span class="token punctuation">(</span><span class="token string">"zhang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//zhang</span><span class="token keyword">var</span> p2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">P</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">,</span><span class="token string">"18"</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//li</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>__proto__<span class="token operator">===</span>p2<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span></code></pre><p>实例在自身创建了方法，和原型无关，不影响其他实例；</p><h1 id="5-instanceof的用法："><a href="#5-instanceof的用法：" class="headerlink" title="5.instanceof的用法："></a><strong>5.instanceof的用法：</strong></h1><p>1）a instanceof A;</p><blockquote><p>a应该是实例对象，A是构造函数；</p><p>    function F(){<!-- --></p><p>    }<br>    var f&#x3D;new F();<br>    console.log(f instanceof F)&#x2F;&#x2F;true<br>    console.log(f instanceof Object)&#x2F;&#x2F;true</p></blockquote><h1 id="6-整体理解："><a href="#6-整体理解：" class="headerlink" title="6.整体理解："></a><strong>6.整体理解：</strong></h1><pre class="language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token comment">//true </span><span class="token comment">//Object 是实例，Function是Object的构造函数，则有：</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token operator">===</span>Object<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Function <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token comment">//true </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token comment">//true </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Function <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token comment">//true </span><span class="token comment">//Function 是实例，Object是Function的构造函数，则有：</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token operator">===</span>Function<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token operator">===</span>Function<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span><span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">F</span><span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">F</span><span class="token punctuation">)</span><span class="token comment">//false</span><span class="token comment">//Object 是实例，F是构造函数，有：</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//null 原型链的尽头</span></code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/aadb52a91ffd799c529e1d195762cc06.png"></p><h1 id="7-两个实例："><a href="#7-两个实例：" class="headerlink" title="7.两个实例："></a>7.两个实例：</h1><h2 id="（1）"><a href="#（1）" class="headerlink" title="（1）"></a>（1）</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>n<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">var</span> b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token comment">//1</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">n</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>    <span class="token literal-property property">m</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>n<span class="token punctuation">,</span>b<span class="token punctuation">.</span>m<span class="token punctuation">,</span>c<span class="token punctuation">.</span>n<span class="token punctuation">,</span>c<span class="token punctuation">.</span>m<span class="token punctuation">)</span><span class="token comment">//1 undefined 2 3</span></code></pre><blockquote><p>b.__proto__还跟随以前的A.prototype地址值；</p><p>b.__proto__跟随新创建的A.prototype地址值；</p></blockquote><h2 id="（2）"><a href="#（2）" class="headerlink" title="（2）"></a>（2）</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">a</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">b</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> f<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//a</span>f<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//报错</span><span class="token constant">F</span><span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//a</span><span class="token constant">F</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//b</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 原型模式 javascript 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法记录（周记）</title>
      <link href="/personal-blog-wzz/2022/08/13/%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/08/13/%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p><strong>目录</strong></p><p><a href="#1.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93%EF%BC%9A">1.个人总结：</a></p><p><a href="#2.%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95%EF%BC%9A">2.算法记录：</a></p><p><a href="#%EF%BC%881%EF%BC%89%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%9A">（1）数组中出现次数超过一半的数字：</a></p><p><a href="#%E2%80%8B%E7%BC%96%E8%BE%91">​编辑</a></p><p><a href="#%EF%BC%882%EF%BC%89%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%EF%BC%9A">（2）数组中出现次数超过一半的数字连续子数组的最大和：</a></p><hr><h1 id="1-个人总结："><a href="#1-个人总结：" class="headerlink" title="1.个人总结："></a>1.个人总结：</h1><p>相对与个人，这个星期的最大收获就是拿到驾照了，虽然中间经历了一小点曲折，但最终拿到手还是很开心的。关于最近在写的项目已经完善的差不多了，我想下个星期必须开始新的知识学习了，不能光是处在舒适区吧。</p><p>记录一下这个星期写的两个算法：</p><h1 id="2-算法记录："><a href="#2-算法记录：" class="headerlink" title="2.算法记录："></a>2.算法记录：</h1><h3 id="（1）数组中出现次数超过一半的数字："><a href="#（1）数组中出现次数超过一半的数字：" class="headerlink" title="（1）数组中出现次数超过一半的数字："></a>（1）数组中出现次数超过一半的数字：</h3><h1 id><a href="#" class="headerlink" title></a><img src="https://img-blog.csdnimg.cn/3f12fb4b4abd4bd88f327f4ca0cb2467.png"></h1><p> </p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">majorityElement</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> l<span class="token operator">=</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">,</span>mid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>l<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> boo<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> left<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>left<span class="token operator">&lt;</span>l<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>left<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>boo<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        boo<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> right<span class="token operator">=</span>left<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>right<span class="token operator">&lt;</span>l<span class="token punctuation">;</span>right<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">==</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            boo<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>            sum<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sum<span class="token operator">></span>mid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p> 用boo数组记录是否访问过来减少执行次数；</p><h3 id="（2）连续子数组的最大和："><a href="#（2）连续子数组的最大和：" class="headerlink" title="（2）连续子数组的最大和："></a>（2）<a href="https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/" title="连续子数组的最大和">连续子数组的最大和</a>：</h3><p><img src="https://img-blog.csdnimg.cn/fbe3a3d33cb54ff1825d4607d641f8a4.png"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxSubArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> end<span class="token operator">=</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>newm<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">:</span>nums<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            newm<span class="token operator">=</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>newm<span class="token operator">+</span>i<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            end<span class="token operator">=</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>newm<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> end<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span></code></pre><p> 借用newn来记录数组的最大值；</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js截取指定字符串后面的所有字符</title>
      <link href="/personal-blog-wzz/2022/08/07/js%E6%88%AA%E5%8F%96%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%8E%E9%9D%A2%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6/"/>
      <url>/personal-blog-wzz/2022/08/07/js%E6%88%AA%E5%8F%96%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%8E%E9%9D%A2%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1、对url里的参数进行操作："><a href="#1、对url里的参数进行操作：" class="headerlink" title="1、对url里的参数进行操作："></a>1、对url里的参数进行操作：</h1><h3 id="（1）-JS获取URL中最后一个斜杠前面的内容："><a href="#（1）-JS获取URL中最后一个斜杠前面的内容：" class="headerlink" title="（1）.JS获取URL中最后一个斜杠前面的内容："></a>（1）.JS获取URL中最后一个斜杠前面的内容：</h3><p> </p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span> <span class="token comment">//要切割的链接</span><span class="token keyword">var</span> index <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"\/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>str <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="（2）-JS获取URL中最后一个斜杠后面的内容："><a href="#（2）-JS获取URL中最后一个斜杠后面的内容：" class="headerlink" title="（2）.JS获取URL中最后一个斜杠后面的内容："></a>（2）.JS获取URL中最后一个斜杠后面的内容：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span><span class="token keyword">var</span> index <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"\/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>str <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>url<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="（3）-JS获取URL中最面的参数："><a href="#（3）-JS获取URL中最面的参数：" class="headerlink" title="（3）.JS获取URL中最面的参数："></a>（3）.JS获取URL中最面的参数：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//截取链接中的code开始</span><span class="token keyword">var</span> code <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">GetRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> url <span class="token operator">=</span> location<span class="token punctuation">.</span>search<span class="token punctuation">;</span> <span class="token comment">//获取url中"?"符后的字串</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"?"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//判断是否有参数</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//从第一个字符开始 因为第0个是?号 获取所有除问号的所有符串</span>        strs <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//用等号进行分隔 （因为知道只有一个参数 所以直接用等号进分隔 如果有多个参数 要用&amp;号分隔 再用等号进行分隔）</span>        <span class="token comment">//alert(strs[1]);          //直接弹出第一个参数 （如果有多个参数 还要进行循环的）</span>         code <span class="token operator">=</span> strs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token function">GetRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">alert</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//截取链接中的code结束</span></code></pre><h1 id="2-JavaScript-截取字段指定字符后面的内容："><a href="#2-JavaScript-截取字段指定字符后面的内容：" class="headerlink" title="2.JavaScript 截取字段指定字符后面的内容："></a>2.JavaScript 截取字段指定字符后面的内容：</h1><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getCaption</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> index <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"cccd"</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> res <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>length<span class="token punctuation">)</span>    <span class="token keyword">return</span> res<span class="token punctuation">&#125;</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'aaabbbcccdddeeefff'</span><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">getCaption</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span></code></pre><h1 id="3-js中实现截取前几个元素以及作为一个新数组的方法：、"><a href="#3-js中实现截取前几个元素以及作为一个新数组的方法：、" class="headerlink" title="3.js中实现截取前几个元素以及作为一个新数组的方法：、"></a>3.js中实现截取前几个元素以及作为一个新数组的方法：、</h1><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token comment">//截取数组前三个元素</span><span class="token keyword">const</span> sliceA<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'sliceA'</span><span class="token punctuation">,</span>sliceA<span class="token punctuation">)</span><span class="token comment">//得到[1,2,3]</span><span class="token comment">//截取数组后三个元素  slice方法</span><span class="token keyword">const</span> sliceArr<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'sliceArr'</span><span class="token punctuation">,</span>sliceArr<span class="token punctuation">)</span><span class="token comment">//得到[6,7,8]</span><span class="token comment">//slice(start,end)表示从下标start开始到下标end（不包括end）进行截取，得到的是一个新数组，不改变原数组。当start为负值时表示从倒数第几个元素开始往后截取，不填end的话就表示从倒数的第几个元素开始截取，一直截取到数组末尾元素</span><span class="token comment">//截取数组后三个元素  splice方法</span><span class="token keyword">const</span> spliceArr<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'spliceArr'</span><span class="token punctuation">,</span>spliceArr<span class="token punctuation">)</span><span class="token comment">//得到[6,7,8]</span><span class="token comment">//splice()方法有三个参数，分别表示从哪个下标开始，删几个，新元素。可以实现增加、删除、替换数组元素的功能。arr.splice(-3,3)表示从倒数第三个元素开始，删除五个元素。该方法返回值时删除的元素集合，会改变原数组。原数组会变成删除的元素剩下的元素集合</span></code></pre><h1 id="周总结："><a href="#周总结：" class="headerlink" title="周总结："></a>周总结：</h1><p>这个星期还主要是在完善项目，改bug，填功能中度过的，写一个功能还是要尽量一次性把那个功能完善完整，这回的项目就吃了这个亏，开始的时候过于急于求成，反而让后期的一些bug，细节处理变得不方便，算法还是要再接再厉，每天练习的，过几天要考科三去了，学车的同时也不能耽误了项目的完善！</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 前端 开发语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java算法对二进制的一些处理</title>
      <link href="/personal-blog-wzz/2022/07/23/java%E7%AE%97%E6%B3%95%E5%AF%B9%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A4%84%E7%90%86/"/>
      <url>/personal-blog-wzz/2022/07/23/java%E7%AE%97%E6%B3%95%E5%AF%B9%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="1-进制的转换："><a href="#1-进制的转换：" class="headerlink" title="1.进制的转换："></a>1.进制的转换：</h1><p> (1)十进制转换其他进制：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> n<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">;</span><span class="token class-name">String</span> result1 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10000    转二进制</span><span class="token class-name">String</span> result2 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10000    转二进制</span><span class="token class-name">String</span> result3 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10    转十六进制</span><span class="token class-name">String</span> result4 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//20    转八进制</span></code></pre><p> (1)二进制转换十进制：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> n<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">;</span><span class="token class-name">String</span> result1 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10000    转二进制</span><span class="token keyword">int</span> m<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//16    转十进制</span></code></pre><h1 id="2-二进制-gt-gt-lt-lt-amp-的运用："><a href="#2-二进制-gt-gt-lt-lt-amp-的运用：" class="headerlink" title="2.二进制&gt;&gt;,&lt;&lt;,&amp;的运用："></a>2.二进制&gt;&gt;,&lt;&lt;,&amp;的运用：</h1><h3 id="（1）-gt-gt-lt-lt-符号表示二进制的位数移动"><a href="#（1）-gt-gt-lt-lt-符号表示二进制的位数移动" class="headerlink" title="（1）&gt;&gt;,&lt;&lt;符号表示二进制的位数移动"></a>（1）&gt;&gt;,&lt;&lt;符号表示二进制的位数移动</h3><p>例如 int i &#x3D; 10;  int j &#x3D; i &lt;&lt; 1; </p><p>i &#x3D; 10 : 十进制 是10，二进制是 1010</p><p>i &lt;&lt; 1: 左移1位，二进制变为 10100，转换位十进制 则是 20</p><p>结论，j &#x3D; 20,也就是 左移1位，相当于 乘以2，以此类推，&lt;&lt; 2 相当于乘以 4</p><p>例如 int i &#x3D; 20;  int j &#x3D; i &gt;&gt; 1; </p><p>i &#x3D; 20 : 十进制 是20，二进制是 10100</p><p>i &gt;&gt; 1: 右移1位，二进制变为01010，转换位十进制 则是 10</p><p>结论，j &#x3D; 10,也就是 右移1位，相当于 除以2，以此类推，&gt;&gt; 2 相当于除以 4；</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1010变0101  5 </span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1010变0010  2</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//变1010020</span></code></pre><h3 id="（2）-amp-运算符的用法："><a href="#（2）-amp-运算符的用法：" class="headerlink" title="（2）&amp;运算符的用法："></a>（2）&amp;运算符的用法：</h3><p>寻找二进制数的交集：</p><p>例如：9&amp;5可写算式如下： 00001001 (9的二进制补码)&amp;00000101 (5的二进制补码)</p><p>00001001</p><p>00000101</p><p>对比2个数的补码可以得出结构为 00000001 也就是1的二进制补码</p><p>可见9&amp;5&#x3D;1。 按位与运算通常用来对某些位清0或保留某些位。</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">00001001</span><span class="token operator">&amp;</span><span class="token number">00000101</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//交集1</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token operator">&amp;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//交集1</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">&amp;</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//101和111  交集101 5</span></code></pre><h1 id="3-算法实例："><a href="#3-算法实例：" class="headerlink" title="3.算法实例："></a>3.算法实例：</h1><h3 id="（1）题目："><a href="#（1）题目：" class="headerlink" title="（1）题目："></a>（1）题目：</h3><p><img src="https://img-blog.csdnimg.cn/da3d84a44ce14601860b98313e77af84.png"></p><h2 id="（2）题解："><a href="#（2）题解：" class="headerlink" title="（2）题解："></a>（2）题解：</h2><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hammingWeight</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">32</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                sum<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java 蓝桥杯 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>限制文件上传格式</title>
      <link href="/personal-blog-wzz/2022/07/16/%E9%99%90%E5%88%B6%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%A0%BC%E5%BC%8F/"/>
      <url>/personal-blog-wzz/2022/07/16/%E9%99%90%E5%88%B6%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="1-直接上代码："><a href="#1-直接上代码：" class="headerlink" title="1.直接上代码："></a>1.直接上代码：</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token parameter">img</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> file <span class="token operator">=</span> img<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> file <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        successText<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"请选择要上传的文件!"</span><span class="token punctuation">;</span>            keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'200px'</span><span class="token punctuation">;</span>            <span class="token function">inputReadOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            okBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token function">inputChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//定义允许上传的文件类型</span>    <span class="token keyword">var</span> allow_ext <span class="token operator">=</span> <span class="token string">".jpg|.png|.gif"</span><span class="token punctuation">;</span>    <span class="token comment">//提取上传文件的类型</span>    <span class="token keyword">var</span> ext_name <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//判断上传文件类型是否允许上传</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>allow_ext<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ext_name <span class="token operator">+</span> <span class="token string">"|"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        successText<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>  <span class="token string">"该文件不允许上传，请上传"</span> <span class="token operator">+</span> allow_ext <span class="token operator">+</span> <span class="token string">"类型的文件,当前文件类型为："</span> <span class="token operator">+</span> ext_name<span class="token punctuation">;</span>            keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'200px'</span><span class="token punctuation">;</span>            <span class="token function">inputReadOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            okBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token function">inputChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>这是封装的判断文件是图片的函数；</p><h2 id="2-接口调用该函数："><a href="#2-接口调用该函数：" class="headerlink" title="2.接口调用该函数："></a>2.接口调用该函数：</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">fileChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> headname<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#file'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">let</span> ishead<span class="token operator">=</span><span class="token function">checkFile</span><span class="token punctuation">(</span>headname<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>ishead<span class="token operator">!=</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">let</span> changemyhead<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>           formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'profile1'</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#file'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'account'</span><span class="token punctuation">,</span> sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"account"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       changemyhead<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>           $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>               <span class="token comment">// 类型</span>               <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"POST"</span><span class="token punctuation">,</span>               <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"http://localhost:8080/ToSkyNews_war_exploded/saveUserProfile"</span><span class="token punctuation">,</span>               <span class="token literal-property property">data</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>               <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span>               <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>               <span class="token literal-property property">processData</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>               <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span>message <span class="token operator">==</span> <span class="token string">"成功并返回数据"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                       successText<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'上传头像成功！!'</span><span class="token punctuation">;</span>                       keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'200px'</span><span class="token punctuation">;</span>                       <span class="token function">inputReadOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       okBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                           keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                           <span class="token function">inputChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                       successText<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'上传头像失败，请重试！'</span><span class="token punctuation">;</span>                       keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'200px'</span><span class="token punctuation">;</span>                       <span class="token function">inputReadOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       okBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                           keepSuccess<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                           <span class="token function">inputChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                   <span class="token punctuation">&#125;</span>                   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>data<span class="token punctuation">.</span>file<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                   changeHead<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundImage <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>date<span class="token punctuation">.</span>data<span class="token punctuation">.</span>file<span class="token punctuation">.</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> userHead<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                       userHead<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundImage <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>date<span class="token punctuation">.</span>data<span class="token punctuation">.</span>file<span class="token punctuation">.</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                   <span class="token punctuation">&#125;</span>               <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>               <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">returndata</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>returndata<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 大数据 javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node封装传formdata数据的接口（多文件上传）</title>
      <link href="/personal-blog-wzz/2022/07/09/node%E5%B0%81%E8%A3%85%E4%BC%A0formdata%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8E%A5%E5%8F%A3%EF%BC%88%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/07/09/node%E5%B0%81%E8%A3%85%E4%BC%A0formdata%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8E%A5%E5%8F%A3%EF%BC%88%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="前文："><a href="#前文：" class="headerlink" title="前文："></a>前文：</h2><p>        这个星期的主要完成的东西我想就是多文件上传了，这也是我第一次封装传formdata数据类型的数据，因为也是刚学不久node，很多东西都是要自己摸索的，关于这个多文件上传我也是查阅了不少的博客，也是问了学长，最后问题才得以解决。关于接口调用的渲染，我是用了layui 的一个模板，不过接口调用的核心代码还是自己敲的，可用行应该还好。最后实现的页面效果图如下：</p><p><img src="https://img-blog.csdnimg.cn/8a8e33f59e814d538cbc9715ffa8dd04.png"></p><h2 id="1-node封装多文件上传接口："><a href="#1-node封装多文件上传接口：" class="headerlink" title="1.node封装多文件上传接口："></a>1.node封装多文件上传接口：</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> FormData<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'form-data'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> multipart <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'connect-multiparty'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调formdata接口的中间件</span><span class="token keyword">var</span> multipartMiddleware <span class="token operator">=</span> <span class="token function">multipart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/api/UploadAttachment'</span><span class="token punctuation">,</span> multipartMiddleware<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> formdata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//建立FormData()对象，注意：node中使用要先下载formdata中间件</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> a <span class="token keyword">in</span> req<span class="token punctuation">.</span>files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        formdata<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>files<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span>files<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span>originalFilename<span class="token punctuation">)</span><span class="token comment">//第二个参数试上传的文件名</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//循环传递file文件对象，req.files[a].path是该文件的本地地址， 用fs.createReadStream(req.files[a].path)进行读取创作，req.files[a].originalFilename是文件本名，用来传出文件名称</span>    formdata<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'enclosure_name'</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>enclosure_name<span class="token punctuation">)</span>    formdata<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'application_id'</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>application_id<span class="token punctuation">)</span>    <span class="token comment">//req.body中传递非文件数据， req.files是文件数据</span>    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://110.40.205.103:8099/user/photo'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span>formdata<span class="token punctuation">,</span>        <span class="token comment">// headers: formdata.getHeaders(),</span>        <span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">token</span><span class="token operator">:</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>token<span class="token punctuation">,</span>            <span class="token literal-property property">formdata</span><span class="token operator">:</span>formdata<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//传递formdata数据</span>            <span class="token literal-property property">maxBodyLength</span><span class="token operator">:</span><span class="token number">10000000</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">err</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> result<span class="token punctuation">.</span>data <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// console.log(err)</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">err</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </code></pre><h2 id="2-js调用接口："><a href="#2-js调用接口：" class="headerlink" title="2.js调用接口："></a>2.js调用接口：</h2><p>关于接口的调用就仁者见仁，智者见智了，为了不同的渲染，会有各种调用方法，不过核心的部分主要还是那么多，关于formdata接口js的调用我发过一个博客：</p><blockquote><p><a href="https://blog.csdn.net/Azbtt/article/details/124513907?spm=1001.2014.3001.5501" title="项目总结（周记）_阿泽不会飞的博客-CSDN博客">项目总结（周记）_阿泽不会飞的博客-CSDN博客</a></p></blockquote><p> 写的是最基本的调用，多文件上传无非就是使用for循环进行file的多文件传值，如：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">file</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>files<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>            i<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token comment">//files是选择的多文件数组，key，value使用layui模板时候的调用，主要是专递data对象，具体使用视情况而定</span></code></pre><h2 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h2>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 node.js javascript 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新项目的第一周（周记）</title>
      <link href="/personal-blog-wzz/2022/07/02/%E6%96%B0%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%AC%AC%E4%B8%80%E5%91%A8%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/07/02/%E6%96%B0%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%AC%AC%E4%B8%80%E5%91%A8%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        如标题所述，这个星期开始了我第二次和别人一起合作写项目，这的进行方式和上回还是有不少差别的。一是因为这回合作是在家进行的，相比于在学校，交流等各方面相比之下较有局限性；二是这次的项目是前后端分离进行的，前端需要用node中的axios封装下后端提供的代码；不过最重要的是，这回我们写的项目很可能会投入使用，所以必须重视起来！</p><p>        记录下关于用axios传给接口json数据的基本方法：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">application_credit_type</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>    <span class="token literal-property property">points</span><span class="token operator">:</span><span class="token string">'4'</span><span class="token punctuation">,</span>    <span class="token literal-property property">remarks</span><span class="token operator">:</span><span class="token string">"www"</span><span class="token punctuation">,</span>    <span class="token literal-property property">specific_information</span><span class="token operator">:</span><span class="token string">"2"</span>  <span class="token punctuation">&#125;</span><span class="token comment">//定义要传的数据</span>  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://127.0.0.1:8080/api/getpost'</span><span class="token punctuation">,</span><span class="token comment">//调用封装好的接口</span>    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>    <span class="token literal-property property">header</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>      <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span><span class="token string">'application/json'</span>  <span class="token comment">//如果写成contentType会报错</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>        在项目中遇见的难题一定要努力突破，积极的去尝试新的方法，希望能在这次项目里再收获多一点经验吧！</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node项目中的文件上传，和邮箱注册</title>
      <link href="/personal-blog-wzz/2022/06/25/node%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%8C%E5%92%8C%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C/"/>
      <url>/personal-blog-wzz/2022/06/25/node%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%8C%E5%92%8C%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>         node项目考核刚结束，同时自己也发现了自己的一些问题，自己还是基础知识掌握的不是很好，不过就花了3，4天就写出了一个小小项目还是比较有成就感的，学习node.js后让我觉得js还有无限种可能。这个星期学习状态还勉强可以，希望下个星期再接再厉吧！</p><p>        记录下写node项目的一些基本功能：</p><h1 id="1-文件上传："><a href="#1-文件上传：" class="headerlink" title="1.文件上传："></a>1.文件上传：</h1><h3 id="（1）node路由-接口的配置："><a href="#（1）node路由-接口的配置：" class="headerlink" title="（1）node路由,接口的配置："></a>（1）node路由,接口的配置：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//路由配置：</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建路由</span><span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//引用中间件</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> storage <span class="token operator">=</span> multer<span class="token punctuation">.</span><span class="token function">diskStorage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">destination</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"\public/img"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">//上传后的文件路径</span>    <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> e <span class="token operator">=</span> file<span class="token punctuation">.</span>originalname<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//获取后缀</span>        <span class="token keyword">const</span> uniqueSuffix <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>uniqueSuffix<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token comment">//指定文件名</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">storage</span><span class="token operator">:</span> storage <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//接口配置：</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/api/updataimg'</span><span class="token punctuation">,</span> upload<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> size<span class="token punctuation">,</span> mimetype<span class="token punctuation">,</span> path<span class="token punctuation">,</span> filename <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>file<span class="token punctuation">;</span>    <span class="token keyword">let</span> types <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'jpg'</span><span class="token punctuation">,</span> <span class="token string">'jpeg'</span><span class="token punctuation">,</span> <span class="token string">'png'</span><span class="token punctuation">,</span> <span class="token string">'gif'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//格式判断（上传图片的）</span>    <span class="token keyword">let</span> tmptype <span class="token operator">=</span> mimetype<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">></span> <span class="token number">500000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">'图片上传尺寸过大！'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//传输大小限制</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>types<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>tmptype<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">'图片上传格式错误！'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//格式判断（上传图片的）</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> imgurl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/public/img/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>filename<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">'图片上传成功！'</span><span class="token punctuation">,</span> <span class="token literal-property property">url</span><span class="token operator">:</span> imgurl <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span></code></pre><h3 id="（2）js调用接口："><a href="#（2）js调用接口：" class="headerlink" title="（2）js调用接口："></a>（2）js调用接口：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token parameter">img</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> file <span class="token operator">=</span> img<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> file <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"请选择要上传的文件!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//定义允许上传的文件类型</span>    <span class="token keyword">var</span> allow_ext <span class="token operator">=</span> <span class="token string">".jpg|.png|.gif"</span><span class="token punctuation">;</span>    <span class="token comment">//提取上传文件的类型</span>    <span class="token keyword">var</span> ext_name <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//判断上传文件类型是否允许上传</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>allow_ext<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ext_name <span class="token operator">+</span> <span class="token string">"|"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"该文件不允许上传，请上传"</span> <span class="token operator">+</span> allow_ext <span class="token operator">+</span> <span class="token string">"类型的文件,当前文件类型为："</span> <span class="token operator">+</span> ext_name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//判断发布格式</span><span class="token keyword">function</span> <span class="token function">upimg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> headname <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#file'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">let</span> ishead <span class="token operator">=</span> <span class="token function">checkFile</span><span class="token punctuation">(</span>headname<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>ishead <span class="token operator">!=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> changemyhead <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#file'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">,</span> sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        changemyhead<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 类型</span>                <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"POST"</span><span class="token punctuation">,</span>                <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"http://127.0.0.1/api/updataimg"</span><span class="token punctuation">,</span>                <span class="token literal-property property">data</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>                <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span>                <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token literal-property property">processData</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"上传成功！"</span><span class="token punctuation">,</span> <span class="token string">'图片上传成功！'</span><span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        changeHead<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundImage <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>date<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">'图片上传尺寸过大！'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"上传失败！"</span><span class="token punctuation">,</span> <span class="token string">'图片上传尺寸过大！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"上传失败！"</span><span class="token punctuation">,</span> <span class="token string">'图片上传格式错误！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">returndata</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>returndata<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//上传头像</span></code></pre><h1 id="2-邮箱注册："><a href="#2-邮箱注册：" class="headerlink" title="2.邮箱注册："></a>2.邮箱注册：</h1><h3 id="（1）node路由的配置："><a href="#（1）node路由的配置：" class="headerlink" title="（1）node路由的配置："></a>（1）node路由的配置：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> nodemailer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"nodemailer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// let testAccount = nodemailer.createTestAccount();</span><span class="token keyword">let</span> transporter <span class="token operator">=</span> nodemailer<span class="token punctuation">.</span><span class="token function">createTransport</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">"smtp.qq.com"</span><span class="token punctuation">,</span>    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">465</span><span class="token punctuation">,</span>    <span class="token literal-property property">secure</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">,</span> <span class="token comment">// true for 465, false for other ports</span>    <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">user</span><span class="token operator">:</span><span class="token string">'2295908251@qq.com'</span><span class="token punctuation">,</span> <span class="token comment">// generated ethereal user</span>        <span class="token literal-property property">pass</span><span class="token operator">:</span> <span class="token string">'fvvtbvkcyvdmeaha'</span><span class="token punctuation">,</span> <span class="token comment">// generated ethereal password</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token parameter">mail<span class="token punctuation">,</span>code</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">'"阿泽" &lt;2295908251@qq.com>'</span><span class="token punctuation">,</span> <span class="token comment">//  发送人</span>        <span class="token literal-property property">to</span><span class="token operator">:</span>mail<span class="token punctuation">,</span> <span class="token comment">// 发送地址</span>        <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">"验证码验证"</span><span class="token punctuation">,</span> <span class="token comment">// Subject line</span>        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">您的验证码是：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>code<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">,有效期3分钟！</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// plain text body</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span>rej</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        transporter<span class="token punctuation">.</span><span class="token function">sendMail</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token function">rej</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token function">res</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>send<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code></pre><h3 id="（2）node接口的配置："><a href="#（2）node接口的配置：" class="headerlink" title="（2）node接口的配置："></a>（2）node接口的配置：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript">router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/api/sendcode'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mail<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>email<span class="token punctuation">,</span> code<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">'发送成功！'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">'发送失败！'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//发送验证码</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/api/register'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>code<span class="token operator">!=</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"验证码错误！"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">username</span><span class="token operator">:</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>username    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"用户名已存在！"</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>         <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ret</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ret<span class="token operator">!=</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"注册成功！"</span><span class="token punctuation">,</span>                <span class="token literal-property property">data</span><span class="token operator">:</span> ret            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>user<span class="token operator">=</span>ret<span class="token punctuation">;</span>            req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>login<span class="token operator">=</span><span class="token string">'1'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"注册失败！"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//用户注册</span></code></pre><h3 id="（3）js调用接口："><a href="#（3）js调用接口：" class="headerlink" title="（3）js调用接口："></a>（3）js调用接口：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getcode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> email<span class="token operator">=</span> emailtext<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>email <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"请求失败！"</span><span class="token punctuation">,</span> <span class="token string">'请输入您的邮箱！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> mailLimit <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>        <span class="token keyword">var</span> mailJudge <span class="token operator">=</span> mailLimit<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mailJudge <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://127.0.0.1/api/sendcode'</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span> <span class="token string-property property">"email"</span><span class="token operator">:</span> email <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"验证码发送成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        curCount <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>　　 <span class="token comment">//设置button效果，开始计时</span>                        codebutton<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"验证码("</span> <span class="token operator">+</span> curCount <span class="token operator">+</span> <span class="token string">")"</span> <span class="token punctuation">;</span>                        codebutton<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>                        InterValObj <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span>SetRemainTime<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"验证码发送失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"请求失败！"</span><span class="token punctuation">,</span> <span class="token string">'请输入正确格式的邮箱！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//发送验证码</span><span class="token keyword">function</span> <span class="token function">reg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> username <span class="token operator">=</span> regname<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">let</span> password <span class="token operator">=</span> regpass<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">let</span> code <span class="token operator">=</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'code'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">let</span> email<span class="token operator">=</span> emailtext<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>username <span class="token operator">!=</span> <span class="token string">''</span><span class="token operator">&amp;&amp;</span> password<span class="token operator">!=</span> <span class="token string">''</span> <span class="token operator">&amp;&amp;</span>code<span class="token operator">!=</span> <span class="token string">''</span> <span class="token operator">&amp;&amp;</span>email<span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://127.0.0.1/api/register'</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> <span class="token string-property property">"username"</span><span class="token operator">:</span> username<span class="token punctuation">,</span> <span class="token string-property property">"password"</span><span class="token operator">:</span> password <span class="token punctuation">,</span><span class="token string-property property">"email"</span><span class="token operator">:</span>email<span class="token punctuation">,</span><span class="token string-property property">"code"</span><span class="token operator">:</span>code<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"注册成功！"</span><span class="token punctuation">,</span> <span class="token string">'你成功的注册了该账号！'</span><span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"userid"</span><span class="token punctuation">,</span> date<span class="token punctuation">.</span>data<span class="token punctuation">.</span>_id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"tousers"</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>msg<span class="token operator">==</span> <span class="token string">'验证码错误！'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"注册失败！"</span><span class="token punctuation">,</span> <span class="token string">'验证码输入错误！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>msg<span class="token operator">==</span> <span class="token string">'用户名已存在！'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"注册失败！"</span><span class="token punctuation">,</span> <span class="token string">'你要注册的用户名已存在！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"注册失败！"</span><span class="token punctuation">,</span> <span class="token string">'你的注册失败！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"注册失败！"</span><span class="token punctuation">,</span> <span class="token string">'请输入完整信息！'</span><span class="token punctuation">,</span> <span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//注册</span></code></pre><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 node.js mongodb 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于node.js中使用mysql数据库：</title>
      <link href="/personal-blog-wzz/2022/06/18/%E5%85%B3%E4%BA%8Enode.js%E4%B8%AD%E4%BD%BF%E7%94%A8mysql%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9A/"/>
      <url>/personal-blog-wzz/2022/06/18/%E5%85%B3%E4%BA%8Enode.js%E4%B8%AD%E4%BD%BF%E7%94%A8mysql%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9A/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>虽然这个星期学习上还是有不少问题的，但是相对于上个星期的学习状态还是要好上不少。</p><p>记录下关于node.js中调用，mysql的初步学习：</p><h2 id="1-建立调用mysql数据库的初始化："><a href="#1-建立调用mysql数据库的初始化：" class="headerlink" title="1.建立调用mysql数据库的初始化："></a>1.建立调用mysql数据库的初始化：</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> mysql<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token keyword">const</span> db<span class="token operator">=</span>mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">host</span><span class="token operator">:</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span><span class="token comment">//数据库ip地址</span>    <span class="token literal-property property">user</span><span class="token operator">:</span><span class="token string">'root'</span><span class="token punctuation">,</span>    <span class="token literal-property property">password</span><span class="token operator">:</span><span class="token string">'111111'</span><span class="token punctuation">,</span>    <span class="token literal-property property">database</span><span class="token operator">:</span><span class="token string">'table'</span><span class="token comment">//数据库名称</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'SELECT * from user'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>results</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h2 id="2-sql语句基本的增删改查方法："><a href="#2-sql语句基本的增删改查方法：" class="headerlink" title="2.sql语句基本的增删改查方法："></a>2.sql语句基本的增删改查方法：</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> sqlshows<span class="token operator">=</span><span class="token string">'SELECT * from user'</span><span class="token keyword">let</span> sqlshowa<span class="token operator">=</span><span class="token string">'SELECT * from user where id=?'</span><span class="token keyword">let</span> sqlinert<span class="token operator">=</span><span class="token string">'insert into user(username,password) values (?,?)'</span><span class="token keyword">let</span> sqlupdate<span class="token operator">=</span><span class="token string">'update user set ? where id=?'</span><span class="token keyword">let</span> sqldelete<span class="token operator">=</span><span class="token string">'delete from user where id=?'</span><span class="token comment">//展示全部的信息</span><span class="token keyword">function</span> <span class="token function">showall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sqlshows<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>results</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//展示个人的信息</span><span class="token keyword">function</span> <span class="token function">showa</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sqlshowa<span class="token punctuation">,</span>id<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>results</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//添加用户</span><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span>password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sqlinert<span class="token punctuation">,</span><span class="token punctuation">[</span>username<span class="token punctuation">,</span>password<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>results</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span>affectedRows<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'插入成功！'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//更新用户信息</span><span class="token keyword">let</span> user1<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">'iii'</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> user2<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">'sss'</span><span class="token punctuation">,</span><span class="token literal-property property">six</span><span class="token operator">:</span><span class="token string">"男"</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">user<span class="token punctuation">,</span>id</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sqlupdate<span class="token punctuation">,</span><span class="token punctuation">[</span>user<span class="token punctuation">,</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>results</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span>affectedRows<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'更新成功！'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//更新部分，其他不变</span><span class="token comment">//删除用户信息</span><span class="token keyword">function</span> <span class="token function">adelete</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sqldelete<span class="token punctuation">,</span>id<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>results</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span>affectedRows<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'删除成功！'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 linq sql node.js database mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暑假的第一篇博客（周记）</title>
      <link href="/personal-blog-wzz/2022/06/11/%E6%9A%91%E5%81%87%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/06/11/%E6%9A%91%E5%81%87%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        大一下学期就上了三个月就结束了，毫无疑问，疫情原因学校提前放假了。提前放假无疑意味着较长的暑假，很有可能这会是长达三个多月的长假。对于一个学生来说，这是一个很好机会，合理的运用这个假期，我们会发生很大改变。我已经对自己计划了大概的任务，接下来就是看我自己的执行力了。</p><p>        话说假期已经过了一个星期了，说实话这个星期的学习确实有些疏忽了。虽然说刚到家事情确实比较多，几乎每天都有人喊出去聚聚玩玩，但讲真的，想要拿出时间去学习，那时间还是很丰富的。这个星期主要学习的是PS，PS的一些基本的工具差不多会用了，也学会了一些基本的P图方法，但是相对于以前在学校学习学到那种醍醐灌顶的状态还是差距甚远的。还有两天就要进行在家的最后一次专业课考试了，这两天还是先把自己的专业课搞会吧。</p><p>         暑假的时间还非常充裕，在这么长的时间里我们可以改变不少的。希望在暑假的学习之余能再去外省玩玩，丰富一下自己的生活。自己给自己制定的生活计划也要严格执行，要到大二了，总要有些改变和突破吧！</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完善项目（周记）</title>
      <link href="/personal-blog-wzz/2022/05/15/%E5%AE%8C%E5%96%84%E9%A1%B9%E7%9B%AE%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/05/15/%E5%AE%8C%E5%96%84%E9%A1%B9%E7%9B%AE%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>   这个星期算是比较特殊的一星期，因为刚开始我们学校就出现了一个密接者。学校采取了封楼措施，一个星期的课都是在寝室上的，在寝室学习的效率是很低的，因为很多时候你要编程的时候，很可能你的室友都在打游戏，甚至还会叫上你一起。今天小组也算是正常开门了，果然如果自己控制不住自己，还是需要让外界的给你施加压力的。</p><p>    项目结束后的十天，主旋律就是完善项目。学长，学姐已经在考核中说了不少的问题，我们自己项目的bug有多少我们自己也很清楚，所以这十天我们自然也不会闲着。也不敢加什么大的东西，大多是对之前欠缺的地方进行一些补充，希望能在写项目的过程中提升自己吧。on(){<br>   var len &#x3D; $(this).val().length;<br>   if(len &gt; 999){<br>    $(this).val($(this).val().substring(0,1000));<br>   }<br>   var num &#x3D; len;<br>   $(“#word”).text(num);<br>  });<br> });</p><p>&#96;&#96;&#96;</p><p>我们写项目的同时要注意有意识的去学习我们没尝试过，或者是不熟练的知识，总是用一个方法贯彻到底往往不能更好的提示自己。</p>]]></content>
      
      
      <categories>
          
          <category> 程序人生 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于项目结束这件事</title>
      <link href="/personal-blog-wzz/2022/05/08/%E5%85%B3%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9D%9F%E8%BF%99%E4%BB%B6%E4%BA%8B/"/>
      <url>/personal-blog-wzz/2022/05/08/%E5%85%B3%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9D%9F%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        前天我们写项目的时间截止了，昨天进行了对我们项目的考核，虽然早有准备我们的项目会比较差，但是考核后还是心里怪不好受的。</p><p>         出现问题，我们应该先考虑自己身上的问题。我们的项目是关于文章发布的项目。首先，针对我个人的任务，自己写的后台管理的问题确实不少。我对此反思，回想我确实对自己的项目任务有些疏忽了，感觉大部分时间都在处理组员的问题。我们整体做的项目不好，跟我刚开始的分工有很大的关系。给组员的分工应该根据个人能力进行合理分工。我给有一个组员分的页面确实少，开始就那俩页面，因为那俩页面确实有些难度，而且还是项目核心些的页面，我想让她写少，但是写好些，不过在项目进行一个多星期她静态页面写差不多写完的时候，我懵了，我不明白为啥前端学到现在，写页面为啥还能这么不堪入目，我去看了组员的代码，说实话，看的时候，真的头皮发麻，css确定盒子的位置，为啥都用的绝对定位呀，我想改她的东西都要找html中父类位置半天，而且她scss竟然和css写的一模一样，一点嵌套都没用，我找她东西就更难找了，她写的是单个文章的页面展示，她竟然调的是全部文章的接口，还是要用什么for循环去实现。让她改她的东西，她还是没改啥，我想，有些写页面的习惯可能就养成了，短暂改过来不太现实。我就跟她说我跟她说你写的东西先放放吧，我给她改改，我花了大半天给她改静态页面，后来给她页面百分之八十的接口都用了，推过去让她自己再完善完善，准确来说，她自己就写了文章下面的评论，甚至评论人的信息都是我渲染上去的。我在想，这个月我确实怪累的，我感觉我操心了过头了，组员的任务就是应该有着自己的挑战，而不少难点我自己非要给你们想思路，找方法，告诉她们咋实现，最后反而给自己的任务耽误了。昨天考核，学长问为啥有些组员就那么点任务，一个组员说当时组长就分给了她一个页面，我的心态。。。确实我分工是真的不合理，不过我想想我给别人改这么多的代码，最后自己的东西没搞好，还反被说我就给她一个页面。我当时感觉，我这一个月这么卷，我都在卷啥呢？浅浅的emo后，我想，这个月我确实对项目太放心上了，反而使自己迷失了一些东西，还迷失了一些理性，让自己，甚至整组的效率都不高。</p><p>        人生就是这样吧，我们不能在自己目前暂时觉得重要的东西上花费太多精力，最后反而辜负了自己不该辜负的。我们认为的东西很多时候都不一定是正确的，因为我们大部分的时间都是局中人，会因为很多事情而影响当时的判断。不过有些东西只有我们经历后，我们才能转换成那个观局人，才能明白自己想法和现实的区别。所以我们不必太过抱怨目前不尽人意的事情，因为事情过后，很可能就是新的成长，过多的负面情绪只会更影响我们的生活,明天还是会新的开始!</p>]]></content>
      
      
      <categories>
          
          <category> 程序人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目总结（周记）</title>
      <link href="/personal-blog-wzz/2022/04/30/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/04/30/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        这个星期又是忙碌的一星期，也是情绪波动的一星期。一是因为项目要结束了，我们的任务还是个半成品。二是因为忙的过程中做了很多无用功，导致我有点焦虑。学长跟我们说我们项目组问题很大，我作为前端组长也是深感愧疚，自己刚开始分配任务就不均匀，自己包揽的任务过多，导致个人压力偏大，其他人的效率也没有提上去。而且整合也大多数是自己来的，甚至有组员的页面我还要做较大的改动，搞得我现在多少有点面目全非🌚🌚🌚，甚至自己的情绪有时候还会有些烦躁，还是尽力调整一下自己的状态吧。</p><p>记录一下我关于FormDate的使用：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">fileChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'profile'</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#file'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'account'</span><span class="token punctuation">,</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//传给接口两个数据'profile'和'account'属性</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"POST"</span><span class="token punctuation">,</span>        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"http://localhost:8080/ToSkyNews_war_exploded/saveUserProfile"</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>        <span class="token literal-property property">dataType</span><span class="token operator">:</span><span class="token string">"json"</span><span class="token punctuation">,</span>        <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token literal-property property">processData</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>message<span class="token operator">==</span><span class="token string">"成功并返回数据"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"上传头像成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            img<span class="token punctuation">.</span>src<span class="token operator">=</span>date<span class="token punctuation">.</span>data<span class="token punctuation">.</span>file<span class="token punctuation">.</span>data<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">returndata</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>returndata<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>        我们永远不要在自己所看重的事情上，投入太多不切实际的期待，附加太多不着边际的价值，因为人生唯一确定的，就是不确定的人生。</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 前端 javascript 开发语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我想水博客这件事（周记）</title>
      <link href="/personal-blog-wzz/2022/04/24/%E5%85%B3%E4%BA%8E%E6%88%91%E6%83%B3%E6%B0%B4%E5%8D%9A%E5%AE%A2%E8%BF%99%E4%BB%B6%E4%BA%8B%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/04/24/%E5%85%B3%E4%BA%8E%E6%88%91%E6%83%B3%E6%B0%B4%E5%8D%9A%E5%AE%A2%E8%BF%99%E4%BB%B6%E4%BA%8B%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>  又到了一周一次的写博客环节，按照以前的惯例，我规定我自己每个星期的周记都会在星期六之前交上，不过现在已经是星期日了，我不自觉的产生了我要水博客的想法，对此加以反思，我有了新的想法。</p><p>  我为什么会产生水博客的想法？分析现在的状态，我脑海里最开始闪出的原因会是:第一次写项目，平时时间比较紧 ，在这种状态下，我几乎忘了我星期六前要写博客这件事。后来，我再对自己进行灵魂拷问:你是真的没有时间吗？很明显，写项目时间虽然紧，但是也不至于连花一俩小时写篇博客的时间都挤不出来。再加思考的我又不由的发问我自己:我为什么非要去让我自己去写博客呢？我想，这是我自己定下的规则，如果这次不执行，下次可能对周记会更加草草了之。不过为了不破坏这个规矩，我第一个想法是:我要水博客！我想，还是自己对这件事的态度出了问题。</p><p>  对某件事的态度出现问题，原因往往是自己对这件事的重视程度不够高，什么事能让人对它的重视程度提高？对个人有价值的事。那么，写博客对我自身的价值在哪呢？1.程序猿几乎每个星期都会学习新的东西，往往没有太多时间来回顾自己学习的东西，写周记就是这个回顾知识的好方法，它能让你对学习的东西加深印象，还能对此加以整合，这对个人知识的巩固是毋庸置疑的。2.程序猿经常会在高度用脑的情况下工作，生活节奏快是常态，而每个星期写写自己的编程，人生心得也是种对自己生活的放松。所以对大多数的程序员来说，写周记是很有意义的，我们何必又要去草草了之呢。</p><p>  思考了写博客对自己的价值后，我对写周记这件事有了自己新的认识，对我想水博客这件事也有了新的认识。这件事如此，人生亦是如此:我们出生在不由我们自己选择的舞台，执行着不由我们自己定下的规则，在大多时候，我们的选择都不由自己，我们不能一味的去抱怨，摆烂。对某些事物再加以思考，可能我们就会发现新的天地！</p><p><img src="https://img-blog.csdnimg.cn/43f0096a9c004cd7b7f041f4853d4871.jpg?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_5rO95LiN5Lya6aOe,size_20,color_FFFFFF,t_70,g_se,x_16" alt="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_5rO95LiN5Lya6aOe,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea上git使用初体验(周记)</title>
      <link href="/personal-blog-wzz/2022/04/16/idea%E4%B8%8Agit%E4%BD%BF%E7%94%A8%E5%88%9D%E4%BD%93%E9%AA%8C(%E5%91%A8%E8%AE%B0)/"/>
      <url>/personal-blog-wzz/2022/04/16/idea%E4%B8%8Agit%E4%BD%BF%E7%94%A8%E5%88%9D%E4%BD%93%E9%AA%8C(%E5%91%A8%E8%AE%B0)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        感觉这个星期主要是在配置的过程中度过的，和后端交互要配置各种东西，大多配置的过程中都会发生一些问题，也借助博客的力量解决啦不少的问题，我感觉遇见问题不是坏事，因为我发现在这个过程中我学会了不少东西。</p><p>        我是这个星期刚开始用idea上的gie的，发现idea上的git确实比较好用，关于项目的冲突解决也有了一定的能力，一般来说，自己要也git进行拉推操作会有以下的步骤：</p><p><img src="https://img-blog.csdnimg.cn/f4de795c3b084e779d7becab736de2cb.png"></p><p><strong>1.点击对号先commit一下做记录，进行状态的备份；</strong></p><p><strong>2.点击蓝色的箭头，进行pull更新处理，为了更新远程仓库的东西（出现冲突的话对比下修改，不是自己写的代码往往要找到写代码的人进行协商操作）；</strong></p><p><strong>3.可以再点对号记录一下（以防万一）；</strong></p><p><strong>4.点击绿色箭头，进行push操作，把代码推到远程操控；</strong></p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次写项目(周记)</title>
      <link href="/personal-blog-wzz/2022/04/10/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%86%99%E9%A1%B9%E7%9B%AE(%E5%91%A8%E8%AE%B0)/"/>
      <url>/personal-blog-wzz/2022/04/10/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%86%99%E9%A1%B9%E7%9B%AE(%E5%91%A8%E8%AE%B0)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        如标题那样，这个星期我第一次接触项目，我们项目组分配两个后端的，四个前端的，我们都是第一次接触项目，刚开始都是懵的状态。接项目有几天了，说实话，现在我的思路还不是很明确。这次在项目组担任前端组长，要给组员分配各自的任务，因为有些页面比较相似，还有些东西没有接口没办法写，所以对于任务的分工还是需要和组员和后端多交流讨论的。</p><p>        从接触项目中，我也发现了自己不少的问题。关于思路不清晰的主要原因还是自己的能力不够，一是自己缺乏项目经验；二是自己的知识储备不够，不牢；一个很明显的样例就是我对Git的使用，对后端写的东西推拉的冲突的处理还是需要多跟后端的交流交流的。</p><p>         昨天还进行了蓝桥杯比赛，我参加的是java组，感觉自己菜的这么真实。算法这个东西还是需要多积累学习的，需要你能够日积月累吧，还是要安排好自己平时练算法的计划吧，总不能明年算法继续摆烂吧，毕竟找工作算法技能是不可少的。</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序人生 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅学H5 Web Workers(多线程)(周记)</title>
      <link href="/personal-blog-wzz/2022/04/02/%E6%B5%85%E5%AD%A6H5%20Web%20Workers(%E5%A4%9A%E7%BA%BF%E7%A8%8B)(%E5%91%A8%E8%AE%B0)/"/>
      <url>/personal-blog-wzz/2022/04/02/%E6%B5%85%E5%AD%A6H5%20Web%20Workers(%E5%A4%9A%E7%BA%BF%E7%A8%8B)(%E5%91%A8%E8%AE%B0)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="周总结："><a href="#周总结：" class="headerlink" title="周总结："></a>周总结：</h1><p>        这周主要进行的是对JS高级的学习，刚开始看视频学一遍后感觉问题不是很大，不过这两天结合其他的进行再学习，我发现我的问题还是不小的。尤其是对闭包，多线程的学习还是过于浅薄，缺少总结；明天又要考核了，感觉不太妙呀。以后对新的知识的学习还是要结合多点渠道多进行学习，要不然很难掌握好知识点！</p><p>        下面浅记录关于JS对多线程的基本用法：</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>        JS是单线程的去跑代码，比如如果做一个循环从0到一个很大的数字相加然后输出，浏览器可能会假死（无响应状态），这个时候利用多线程的优点去创建主线程和子线程成为了解决这个问题的好方法；</p><p>下面记录一下JS多线程的基本应用：</p><h1 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h1><h3 id="1-main-js-（主线程）："><a href="#1-main-js-（主线程）：" class="headerlink" title="1.main.js （主线程）："></a>1.main.js （主线程）：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> number<span class="token operator">=</span><span class="token number">42</span><span class="token keyword">var</span> worker<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">'t1.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建Worker对象</span>worker<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"主线程接收分线程返回的数据"</span><span class="token operator">+</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>   <span class="token comment">//或进行代码的简写：</span><span class="token comment">//worker.onmessage=(&#123;data&#125;)=>&#123;</span><span class="token comment">//   console.log("主线程接收分线程返回的数据"+data);</span><span class="token comment">//    alert(data)</span><span class="token comment">//&#125;</span><span class="token comment">//绑定接收信息的监听，当接收到信息后调用</span>worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"主线程向分线程发送数据"</span><span class="token operator">+</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//向分线程发送信息</span></code></pre><h3 id="2-t1-js-分线程-："><a href="#2-t1-js-分线程-：" class="headerlink" title="2.t1.js(分线程)："></a>2.t1.js(分线程)：</h3><p> </p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">fff</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> n<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">fff</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">fff</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> <span class="token function-variable function">onmessage</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> number<span class="token operator">=</span>event<span class="token punctuation">.</span>data<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"分线程接收到的主线程数据："</span><span class="token operator">+</span>number<span class="token punctuation">)</span>    <span class="token keyword">var</span> result<span class="token operator">=</span><span class="token function">fff</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>    <span class="token function">postMessage</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"分线程向主线程发送数据："</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//或进行代码的简写：</span><span class="token comment">//self.onmessage=(&#123;data&#125;)=>&#123;</span><span class="token comment">//    var number=data;</span><span class="token comment">//    console.log("分线程接收到的主线程数据："+number)</span><span class="token comment">//    var result=fff(number)</span><span class="token comment">//    postMessage(result)</span><span class="token comment">//    console.log("分线程向主线程发送数据："+result)</span><span class="token comment">//&#125;</span><span class="token comment">//alert("d");//报错</span><span class="token comment">//因为alert是window的方法，分线程的全局对象不是window</span></code></pre><h3 id="3-控制台输出结果："><a href="#3-控制台输出结果：" class="headerlink" title="3.控制台输出结果："></a>3.控制台输出结果：</h3><blockquote><p>主线程向分线程发送数据：42<br>分线程接收到的主线程数据：42<br>分线程向主线程发送数据：267914296<br>主线程接收分线程返回的数据：267914296 </p></blockquote><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端笔记 程序人生 前端 js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于原型(周记)</title>
      <link href="/personal-blog-wzz/2022/03/26/%E5%85%B3%E4%BA%8E%E5%8E%9F%E5%9E%8B(%E5%91%A8%E8%AE%B0)/"/>
      <url>/personal-blog-wzz/2022/03/26/%E5%85%B3%E4%BA%8E%E5%8E%9F%E5%9E%8B(%E5%91%A8%E8%AE%B0)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="1-函数的prototype属性："><a href="#1-函数的prototype属性：" class="headerlink" title="1.函数的prototype属性："></a>1.函数的prototype属性：</h2><p>1）每个函数都有一个prototype属性，它默认指向一个object空对象（称作：原型对象）；</p><p>2）原型有一个属性constructor，它指向函数对象；</p><p>3)   实例有__proto__属性，可以指向构建函数的prototype属性内容；</p><h2 id="2-基本理解："><a href="#2-基本理解：" class="headerlink" title="2.基本理解："></a><strong>2.基本理解：</strong></h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token comment">//true </span>   <span class="token comment">//Object 是实例，Function是Object的构造函数，则有：</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token operator">===</span>Object<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Function <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token comment">//true </span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token comment">//true </span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Function <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token comment">//true </span>   <span class="token comment">//Function 是实例，Object是Function的构造函数，则有：</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token operator">===</span>Function<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token operator">===</span>Function<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span>   <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">F</span><span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment">//true</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">F</span><span class="token punctuation">)</span><span class="token comment">//false</span>   <span class="token comment">//Object 是实例，F是构造函数，有：</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment">//true</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment">//true</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//true</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token comment">//null 原型链的尽头</span></code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/76b5bafd539374720559b54e834be3bf.png"></p><h1 id="结束！"><a href="#结束！" class="headerlink" title="** 结束！**"></a>** 结束！**</h1><p> 博客参考：<a href="https://www.bilibili.com/video/BV14s411E7qf?p=38&spm_id_from=pageDriver" title="尚硅谷JavaScript高级教程(javascript实战进阶)_哔哩哔哩_bilibili">尚硅谷JavaScript高级教程(javascript实战进阶)_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 程序人生 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS的基本数据类型(周记)</title>
      <link href="/personal-blog-wzz/2022/03/19/JS%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B(%E5%91%A8%E8%AE%B0)/"/>
      <url>/personal-blog-wzz/2022/03/19/JS%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B(%E5%91%A8%E8%AE%B0)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="1-基本数据类型："><a href="#1-基本数据类型：" class="headerlink" title="1.基本数据类型："></a><strong>1.基本数据类型：</strong></h2><p>1.String: 任意字符串；</p><p>2.Number: 任意的数字；</p><p>3.Boolean: true&#x2F;false；</p><p>4.undefined;</p><p>5.null;</p><h2 id="2-对象数据类型："><a href="#2-对象数据类型：" class="headerlink" title="2.对象数据类型："></a>2.对象数据类型：</h2><p>1.Object: 任意对象；</p><p>2.Function： 一种特别的对象（可以执行）；</p><p>3.Array: 一种特别的对象（数组下标，内部数据是有序的）；</p><h2 id="3-数据类型的基本判断方式："><a href="#3-数据类型的基本判断方式：" class="headerlink" title="3.数据类型的基本判断方式："></a>3.数据类型的基本判断方式：</h2><p>1.typeof: 返回的是数据基本类型的字符串表达；</p><p>2.instanceof: 判断对象的基本类型；</p><p>3.&#x3D;&#x3D;&#x3D; ：可判断undefined，null；</p><p>（1）基本类型的判断：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/89dfa894397bb6c8e09c193beaa8738e.png"></p><p>（2）对象类型的判断：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/6022704950ec689717e8e7c9c5bdf1d4.png"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> n<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">n1</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token function-variable function">n2</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"n2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token string">"in"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">n2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//n2  in</span></code></pre><h2 id><a href="#" class="headerlink" title></a></h2><p>4.undefined与null的区别：</p><p>（1）undefined没定义；</p><p>        null定义了，没赋值；</p><p>（2）什么时候要赋值null：</p><p>        var n&#x3D;null 可让n指向的对象成为垃圾对象；</p><h2 id="5-区分变量和数据类型："><a href="#5-区分变量和数据类型：" class="headerlink" title="5.区分变量和数据类型："></a>5.区分变量和数据类型：</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/c992e7740158937930c00b6272bd29e6.png"></p><p>笔记参考：<a href="https://www.bilibili.com/video/BV14s411E7qf">https://www.bilibili.com/video/BV14s411E7qf</a> </p><h1 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h1><p>        有没有一种可能？这些盘子不会碎？</p><p><img src="https://img-blog.csdnimg.cn/1b7b4185ce204bc89adb1e7b70fd1889.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_5rO954ix5bmy6aWt,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序人生 javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅学ES6(周记)</title>
      <link href="/personal-blog-wzz/2022/03/13/%E6%B5%85%E5%AD%A6ES6(%E5%91%A8%E8%AE%B0)/"/>
      <url>/personal-blog-wzz/2022/03/13/%E6%B5%85%E5%AD%A6ES6(%E5%91%A8%E8%AE%B0)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        这个星期主要是在做考核任务中度过的，虽然现在页面做的差不多来，但我的学习计划中es6的学习还是完成的比较少，浅记一下es6学习的一点内容吧！</p><p>1.浅记var,let.const:</p><p>（1）let必须先定义后使用,var后面定义的话会变成undefined,因为发生了变量提升,提升到最开始，但没被定义；</p><p>（2）const表示声明一个常量，并且声明的时候一定要赋值；常量的值不能赋值；和let一样是块级作业域；</p><p>2.关于箭头函数：<br>（1）function main(me){}&#x3D;&#x3D;&#x3D;var main&#x3D;(me)&#x3D;&gt;{};</p><p>（2）关于箭头函数省略小括号，大括号：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a008438b3966583eabac42661d7423a1.png"></p><p> （3）关于箭头函数中引用this的区别：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/4c1725bb56fc0d43b2544a7663d4728d.png"></p><p> </p><p>箭头函数适合于this无关的回调，定时器，数组方法的回调；</p><p>不适合于this有关的回调，事件回调；</p><p>数组的回调：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/82a83013c1ade8af2afeed384a199082.png"></p><p> 3.结构赋值：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ac007f798dd0c05de6a7e7d15674f9ad.png"></p><p> 4.rest参数的数组</p><p><img src="https://img-blog.csdnimg.cn/img_convert/b97b232b60397b7b66e7250868cfae85.png"></p><p> …args的rest参数必须放在参数最后，不然报错没意义；</p><p>5.扩展运算符：</p><p>（1）数组的引用：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token constant">F4</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"伞兵"</span><span class="token punctuation">,</span><span class="token string">"铠甲"</span><span class="token punctuation">,</span><span class="token string">"翠花"</span><span class="token punctuation">,</span><span class="token string">"大帝"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token keyword">function</span> <span class="token function">show1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">function</span> <span class="token function">show2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">F4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">function</span> <span class="token function">show3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token constant">F4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token function">show1</span><span class="token punctuation">(</span><span class="token constant">F4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">show1</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token constant">F4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">show2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">show3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> 效果如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e1e0b01ba60e3251c09270e1e6f0c996.png"></p><p>（2）数组的合并：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d21859e2125a35f7799925bb2693a2f5.png"></p><h1 id="结束"><a href="#结束" class="headerlink" title="** 结束!**"></a>** 结束!**</h1><p>         飞青不擦儿！</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我博客码龄到了100天这件事（周记）</title>
      <link href="/personal-blog-wzz/2022/03/06/%E5%85%B3%E4%BA%8E%E6%88%91%E5%8D%9A%E5%AE%A2%E7%A0%81%E9%BE%84%E5%88%B0%E4%BA%86100%E5%A4%A9%E8%BF%99%E4%BB%B6%E4%BA%8B%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/"/>
      <url>/personal-blog-wzz/2022/03/06/%E5%85%B3%E4%BA%8E%E6%88%91%E5%8D%9A%E5%AE%A2%E7%A0%81%E9%BE%84%E5%88%B0%E4%BA%86100%E5%A4%A9%E8%BF%99%E4%BB%B6%E4%BA%8B%EF%BC%88%E5%91%A8%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>      又到了一周一次写博客的时候，今天才发现，不知不觉，我博客上的码龄已经刚好到了100天，其实按理说我真正的码龄要不比100天多个十来天吧。</p><p>      想想这100来天，自己确实学到了不少东西，包括C语言基础，Java基础，HTML，CSS，JS基础，Git等基本语言和操作。虽然学的东西乍一看还挺多，但是我深知自己对这些编程语言基础掌握的不够扎实，一是因为学的比较快，并且学的比较窄。二是自己总是眼高手低，实践次数匮乏，经验不足。</p><p>       新的学习和考核又开始了，每回都是刚看到考核任务的时候都有点懵，但是经过一番摸索，就会渐有思路。这可能算是第一次用到后端提供的接口吧，感觉给的接口都标记的比较清晰，我想这回考核应该也问题也不大吧。感觉我考核要是做页面的话会好些，不过考完知识点我总是稀里糊涂的，还是自己的基础不扎实，应该多注意注意在做页面的时候对知识的加固，学习。对搜索过来的功能，应该自己搞懂并掌握。</p><p>        有没有一种可能，我还只是在第二层呢？</p><p><img src="https://img-blog.csdnimg.cn/c2efa97789394a519a4cec44b53ea28d.jpg?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_5rO954ix5bmy6aWt,size_20,color_FFFFFF,t_70,g_se,x_16" alt="watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_5rO954ix5bmy6aWt,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开学的第一个博客(周记)</title>
      <link href="/personal-blog-wzz/2022/02/26/%E5%BC%80%E5%AD%A6%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2(%E5%91%A8%E8%AE%B0)/"/>
      <url>/personal-blog-wzz/2022/02/26/%E5%BC%80%E5%AD%A6%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2(%E5%91%A8%E8%AE%B0)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        不知不觉开学已经一个星期了，小组的学习又开始了，这次的学习任务给的时间比较充裕，主要学习了ajax，git，sass。虽然刚开始的时候学习Git是有些困难的，但通过我反复试错，Git的一些基本用法还是会用的，不过可能是jquery没怎么学习的原因，学习ajax学完后感觉有点迷糊，ajax就会些最最基本的用法，希望在日后的ajax运用中我能对此再加以巩固吧！</p><p>        前几分钟刚考完核，我又是第一个被叫去考的，我在想：难道我头看着这么铁吗？（唯唯诺诺的表情），我上去学姐就让我运行我的页面，我上去一顿输入，结果它来个跳转失败，我尬住了，然后才知道应该设个相对定位，我还用了location.href直接获取地址跳转，还是因为做页面的时候没有对不太了解的知识继续再学习，下次一定！明天中午还有个考核，也不清楚准备咋考，不过只要有些JS基础，应该都问题都不大（虽然我学的还是太逊了）。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> input<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"keyup"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token operator">==</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当在input中作用时，回车键可以调用里面的main()方法；</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git js 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寒假第二周的周记</title>
      <link href="/personal-blog-wzz/2022/01/23/%E5%AF%92%E5%81%87%E7%AC%AC%E4%BA%8C%E5%91%A8%E7%9A%84%E5%91%A8%E8%AE%B0/"/>
      <url>/personal-blog-wzz/2022/01/23/%E5%AF%92%E5%81%87%E7%AC%AC%E4%BA%8C%E5%91%A8%E7%9A%84%E5%91%A8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        寒假已经在家两个星期了，这个星期相比上个星期出门少了，一个原因是这个星期几乎每天都在下雪，还有是疫情原因很多娱乐场所都关闭了。这个星期的学习状态相比于上个星期还是有所改进的，不过还是有些问题，比如学习效率不高，学习时间自己也没有挤充足等问题需要克服。</p><p>        这个星期的粗略的学习js后就开始了京东首页的页面制作，刚开始的体验这个页面的时候有很多地方是没有头绪的，其中有很多效果光看看还真不知道咋实现，做页面也有3天了，遇到的问题还不少，不过大多数的问题通过网络查阅还是得以解决了，做页面的时候也发现了许多以前学习遗忘的知识，还有些没学到的知识都是边做变学的。虽然现在做页面的效率太低，并且没搞懂的东西还有不少，但是相比于刚开始的没有头绪还是有所进步的，希望后面的学习里效率能更高一些，时间自己也能多挤挤去完成页面的制作。</p><p>记录两个关于引用js的基础知识吧：</p><pre class="language-markup" data-language="markup"><code class="language-markup">window.onload=function()&#123;    &#125;；//一般js写在body前面的话要引用，大括号里面写js内容window.addEventListener("scroll",function()&#123;&#125;)//页面滚轮触发大括号里面的js效果</code></pre><p>        天气寒冷，我的心可不冷。</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html 前端 javascript 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寒假学习第一个星期的总结</title>
      <link href="/personal-blog-wzz/2022/01/16/%E5%AF%92%E5%81%87%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%98%9F%E6%9C%9F%E7%9A%84%E6%80%BB%E7%BB%93/"/>
      <url>/personal-blog-wzz/2022/01/16/%E5%AF%92%E5%81%87%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%98%9F%E6%9C%9F%E7%9A%84%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        假期在家里学习编程已经一个星期了，这个星期主要是对JavaScript经行了初步的学习，刚开始学习这门语言的时候发现上面有很多和以前学过的Java中类似的地方，学习的时候行云流水，但是最近的两天我开始学习新的东西的时候，我发现这学习还是不简单的。因为学习的东西比较多，又可能是刚开始的学的东西比较的杂，总是感觉学完一个东西后过个两天就会变得模糊。及时的回顾学习的东西变的格外重要，而且学习的东西可能有一些空，要意识到的联想，思考它放到那个地方会发生什么样作用，并且尽量去加以试验，这样学习的过程就会变的更有成就感；</p><p>        关于假期学习毋庸置疑我们要面临的最大问题就是我们自己的惰性，在我看来，我对我这个星期的学习状态是十分不满意的，自己每天布置的学习计划有几天都没有完成，并且自己的学习效率十分的底下，这与我的不专心有很大的关系。对此情况，我觉的主要原因是我现在没有太大的有忧患意识，在下个星期我会针对这个问题进行改善，追求做到学习和放松的时候都能专心，做到劳逸结合。</p><p>       还是那句话：最难不过坚持！</p><p><img src="https://img-blog.csdnimg.cn/cce0a68d78744ef9a49e6f4fe9c6a299.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_5rO954ix5bmy6aWt,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序人生 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于前端考核那些事</title>
      <link href="/personal-blog-wzz/2021/12/13/%E5%85%B3%E4%BA%8E%E5%89%8D%E7%AB%AF%E8%80%83%E6%A0%B8%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
      <url>/personal-blog-wzz/2021/12/13/%E5%85%B3%E4%BA%8E%E5%89%8D%E7%AB%AF%E8%80%83%E6%A0%B8%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        时间总在不知不觉中悄然流逝，我学习前端已经有两个星期了，就在前天也进行了前端的页面考核，在这一个星期的页面自作期间里，我真切的体会到了靠着自己的努力去完成一件工程的快乐，成就感。</p><p>        记得刚开始接手这个页面的时候，是很无从下手的，在艰难的开头构思后，我也经过我的学习一步步的把页面完成了，在这其中我体会到了博客的前端，有好一些超出我技术范围的效果使用我基本上都可以在博客上得以学习与解决。前端的学习在刚开始确实是比较友好的，因为你在学习到一个东西后你很可能能马上用到它，虽然我的页面做的还原度也不算低，但是人外有人，天外有天，小组的大佬们一班平时都不显山露水，比我强的人大有人在，从这我体会到了把前端做到完美的意义与重要性，因为当你在想无限接近于完美时，你的能力往往会随着你的这种渴望去追求得到提升，从而不段完善自己。以后不能像这次一样，任务提前做的差不多了就搁哪摆烂了，学习是自己的事，比较我们要面向的是工作，而仅限于是面前的考核。</p><p>        小组分方向了，在我不断的内心斗争下，我选择我较为感兴趣的前端，其实按我对我自己的理解来看我是比较适合学后端的，因为我自认为我的逻辑性还不错，不过对前端兴趣最终决定了我的选择。不过不管学习前端还是后端，他们都有自己的难点和容易的地方，前端学习是很需要一个人有终身学习态度的，希望我能对得起我内心的选择。</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 html asp.net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端那些事</title>
      <link href="/personal-blog-wzz/2021/12/05/%E5%89%8D%E7%AB%AF%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
      <url>/personal-blog-wzz/2021/12/05/%E5%89%8D%E7%AB%AF%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        学习前段已经有十几天了，对学习，生活也有了些感悟，在此就记录一下吧。</p><p>        相比于刚开始学习的java，前端学习更容易入手，刚开始要记忆的东西较多。不过前端学习起来其实蛮有意思的，因为你学习到一个代码知识，你能立马知道它是用来干什么的，并且前端学习更能让人有成就感，当你完成一个小的，或是一个大的框架时，你会成就感满满。</p><p>        小组这几天用开始考核我们前端知识了，要求我们做一个发布页面，还愿度要90%以上，刚开始是感觉任务挺艰巨的，尤其是第一天，搞了半天就弄出来一个背景。不过通过我几天的“死缠烂打”下，渐渐入门起来，编写的能力在逐渐地提升，速度也跟了上来。相信再过两天我的页面应该就完成的差不多了（一些页面的细节还不能兼顾到）。最近写页面的时候有对布局的一些细节有了些感悟，设置有些块宽和高的时候用百分百是非常必要的，如果就用平平的固定宽高的话，很多不同大小的设备的页面美观是不能兼容的，前端就应该不断追求完美，这样才能真正学好前端。</p><p>        最近我在思考，真正有意义的美好大学生活是什么？在我的思考中，在这品台中我们应该不断的尝试些新的东西，也要尝试的追求些自己觉得美好的，喜欢东西，当然尝试的过程里不能忘了我们的主业是什么。真正的美好生活不是固定样式的，它是我们自定义来的。自己觉得对的东西要有自己的立场，不能太在意别人的说辞和看法，自己内心觉得开心才是真开心，自己觉得有意义才是真有意义。</p><p>        还是那句话——最难不过坚持！</p>]]></content>
      
      
      <categories>
          
          <category> 周记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我第一次写博客的这件事</title>
      <link href="/personal-blog-wzz/2021/11/27/%E5%85%B3%E4%BA%8E%E6%88%91%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%99%E4%BB%B6%E4%BA%8B/"/>
      <url>/personal-blog-wzz/2021/11/27/%E5%85%B3%E4%BA%8E%E6%88%91%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>        今天第一次接触博客这个网站，也对这个网站进行了从大概到细微的一系列浏览，发现了对我这个刚学习敲代码一个月的不秃头的编程小白来说，写下一个关于学识上的文章多少有些不现实，所以我选择写些关于我最近学编程的心得体会。</p><p>        先说说我现在所处的社会状况。几个月前的高中毕业生我，以高出河南一本线八分的中不溜秋的成绩进入了河南的一所中不溜秋的本科院校，学的专业是物联网工程，一个即学软件又学硬件的广学专业，刚开始在学校的两个星期里，我是又忙又迷茫。忙是因为大一开始活动，事情都比较多；迷茫是因为班委竞选，学生会，社团，学习小组等多个选择摆在我面前，再加上我这广学的专业，竟让我这个刚入校的大一新生对自己的未来进行了深思：“我考不考研？我未来能干啥？我想干啥？”。在我迷茫之际，我想起了那个南漂20年的“不惑”父亲。主动拨打了那个“满满大道理”的电话，不得不承认那是听我父亲讲道理最认真的一次，也是我最佩服他的一次。竟然我选择了在大学继续学习，出来时候最靠的必须是我过硬的专业知识，谁出来就是高管，老板？我坚定地进了我们学校特色性的学习小组专门去学习编程知识。</p><p>        在所有选择中，学习小组绝对是最忙的。每天没正课的时候都要去小组学习编程，一天都晚能自己支配的时间相对那些不加小组的人来说是很少的，不过我感觉我每天过的都很幸福，很满足。仿佛一切对现在，对未来的思考都变得清晰了起来。经常在晚上学到十点四十的我回到寝室常常会被正在打游戏的室友冠以“卷王本王的称号”，我都只是笑笑，光明正大的学习怎么能算卷呢？</p><p>        在学习小组已经学编程一个月了，专业课学C语言的我又在小组学习了java基础，现在又刚开始学习前端知识。在学习小组中的学编程的进程是很快的，我常常没时间在小组时间学习我的专业课，不过对于我自己而言，较自己的专业课，我还是更喜欢学习编程类的知识，每次学完几个小时编程，我都会有种莫名的满足感。</p><p>        学习编程是一个循序渐进的过程，中间必定会遇见许多挫折。最难不过坚持，我相信我会在学习编程的道路上一直走下去！</p>]]></content>
      
      
      <categories>
          
          <category> 程序人生 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
